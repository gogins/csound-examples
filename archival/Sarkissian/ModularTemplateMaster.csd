<CsoundSynthesizer><CsInstruments>/***************************************************	Welcome to MacCsound!	This is the Default File Template.	To be able to render this file, 		you must first save it!	If you would like to create different default	settings for all your orc/sco/io/options, edit	this or any other document and then save it as	       default.csd in your local	~/Library/Application Supprt/MacCsound folder.***************************************************/; PBS - Modular Template (MT); PBS - MT01.orcsr                   =                    44100                                                                                                                                      ; Sample Rate. Also consider using 96-KHz, and 192-KHz with systems that have such audio capabilities.kr                   =                    4410                                                                                                                                        ;  Control Rateksmps          =                    10                                                                                                                                            ;  Sample Rate-to-Control Rate Rationchnls          =                     2                                                                                                                                              ;  Number of Channels                       instr              0705                                                                                                                                        ;  PBS - MT01.orc; Control Inputk1                  midictrl        1                                                                                                                                              ;  MIDI Inputk2                  =                    127/k1                                                                                                                                    ;  Scale & Divi for Pitch;This is the virtual equivalent of a modular system with a wall full of function module, only it's in the virtual world of the computer. Specify the wall of modules, then specify the module patchings.; Envelope Generatorsk3env1         line                p4, p10, p7                                                                                                                          ;  Linear Envelope Generatork4env2         expon           p4, p3, p7                                                                                                                            ;  Exponential Envelope Generatork5env3         adsr              p12, p13, p14, p15                                                                                                           ;  ADSR (Attack, Decay, Sustain, Release) Envelope Generator; Morphing Parameters- modelled after Riccardo's Morphing routines. See Computer Music Journal (CMJ), issue- Fall of 2003.izeroset        =                     0                                                                                                                                            ;  Initial Pointicoeff             =                     p4                                                                                                                                         ;  Max Amplitudeimorphup     =                     izeroset+p4                                                                                                                       ;  Morph-up Zero-to-Max Rampimorphdn     =                     p4-izeroset                                                                                                                        ;  Morph-down Max-to-Zero Rampidtup              =                     p2+p10                                                                                                                               ;  Ramp-Up Timeidtdn              =                     p10+p11                                                                                                                             ;  Ramp-Down Timeimorphing    =                     (imorphup/idtup)+(imorphdn/idtdn)                                                                           ;  Morphization Function; To change Morph Amplitudes, alter icoeff, imorphup and imorphdn. To change Morph Time Rate, alter idtup and idtdn. Morphs can be applied to amplitude, frequency, phase or time.; Pure Tone Oscillators- using k4env2 as default Envelope Generator, but can switch it to any Envelope Generator that is specified (k3env1, k4env2, or k5env3) that can be used for these oscillators.aosc1            oscil                     p4, p5, 1                                                                                                                       ;  Oscillator 1- Sine Waveaosc2            oscil                     k4env2, p5, 2                                                                                                              ;  Oscillator 2- Triangle Waveaosc3            oscil                     k4env2, p5, 3                                                                                                              ;  Oscillator 3- Sawtooth Waveaosc4            oscil                     k4env2, p5, 4                                                                                                              ;  Oscillator 4- Ramp Waveaosc5            oscil                     k4env2, p5, 5                                                                                                              ;  Oscillator 5- Square Waveaosc6            oscil                     k4env2, p5, 6                                                                                                              ;  Oscillator 6- Pulse Waveaosc7            oscil                     k4env2, p5, 7                                                                                                              ;  Oscillator 7- Harmonic Sine Summing Square Wave; Pure Tone Oscillators- using k4env2 as default Envelope Generator, but can switch it to any Envelope Generator that is specified (k3env1, k4env2, or k5env3) that can be used for these oscillators.; Waveshaping Tables- using aosc1 as default, but can use any of the Pure Tone Oscillators for these tables. Just be aware of amplitude clipping distortion, ; non-linear distortions and frequency distortions when using these tableswith other than Sine Wave oscillators.awvs1           table              aosc1, 8                                                                                                                             ;  Wavetable 1- Linear Transfer Function (LTF)awvs2           table              aosc1, 9                                                                                                                             ;  Wavetable 2- Transfer Function 2awvs3           table              aosc1, 10                                                                                                                           ;  Wavetable 3- Transfer Function 3awvs4           table              aosc1, 11                                                                                                                           ;  Wavetable 4- Bessel Function (0 to 60)awvs5           table              aosc1, 12                                                                                                                           ;  Wavetable 5- Transfer Function 5awvs6           table              aosc1, 14                                                                                                                           ;  Wavetable 6- S-Curve Transfer Functionawvs7           table              aosc1, 15                                                                                                                           ;  Wavetable 7- Uniform Noise Generatorawvs8           table              aosc1* awvs7, 14                                                                                                            ;  Wavetable 8- Sine Wave with Noise thru an S-Curve Transfer Function Table; awvs8 can be implemented using any oscillator from the Pure Tone Oscillators group and any of the wave table funtion numbers (8-thru-15).; Waveshaping Tables- using aosc1 as default, but can use any of the Pure Tone Oscillators for these tables. Just be aware of amplitude clipping distortion, ; non-linear distortions and frequency distortions when using these tables with other than Sine Wave oscillators.; Signals- these are two default signals using Waveshaping Tables, but any of the waveshapes (1-thru-8) can be used here for Signal 1 and Signal 2.asig1              =                     awvs1                                                                                                                                 ;  Signal 1asig2              =                     awvs8                                                                                                                                 ;  Signal 2; Signals- these are two default signals using Waveshaping Tables, but any of the waveshapes (1-thru-8) can be used here.;Trigonometric Functions-icq                    =                     3.141592654                                            ; From Pythagorean ratio of 22/7, or pi to nine decimal places.asine               =                      sin(awvs1+(2*icq/8))                             ; Assumes awvs1= SIne Wave thru a Linear Transfer Function wave table, 8 <--> b, b= whole number integer and quadrature increment. bounded.acosine           =                     cos(awvs1+(2*icq/4))                            ; Assumes awvs1= SIne Wave thru a Linear Transfer Function wave table, 4 <--> b, b= whole number integer and quadrature increment. bounded.atrigomorph  =                    ((imorphing-p4)*asine)+(p4+(p4/2))*acosine                                                          ;  Trigonometric Orthogonality with Coeffients morphing over time.; Trigonometric Orthogonality Function where,  y= ((n-m) sin (X+(2pi/b)) + ((p+q) cos (X+(2pi/c)), and "n" changes over time according to morph paramaters controlling "imorphing" function.; Ramp-Up Delta Amplitude specified by izeroset+p4= 0 |---> 10000, for ramp-up for "imorphup", for Delta-T (time) for 0 |----> 2.0 seconds.; Ramp-Down Delta Amplitude specified by p4-izeroset= 10000 |---> 0, for ramp-down for "imorphdn", for Delta-T (time) for 2.0 seconds |----> 4.0 seconds.; The function of :     y= ((n-m) sin (X+(2pi/b)) + ((p+q) cos (X+(2pi/c))   was originally modelled on the Graphing Calculator by Pacific Tech, found on recent model Mac Computers.; The equation used is:    y = ((n-1) sin(X+(2pi/8)) + ((4+2) cos (X+(2pi/4)),  where "n" can be made to change over time as a function of the graph program that allows you to see how function changes over a series ; of different N-coeffients, as they change over time. The morphing function routine does in Csound what the n-function does in the Mac Graphing Calculator. If you have a Mac using OS-7.5.1 thru OS-10.3.5, then; it's worth checking out, its most likely there. If you use OS-10.3.5 (Panther) and it brings up Classic OS-9 when OS-9 applications are openned, then you may have the "Graphing Calculator". It even does ; 3-Dimensional graphs. Most Mac users I've come across don't even know it's there until I show it to them. Check out the Graphing Calculator, it's part of OS7 thru OS9, they stopped using it with OS10.asig31               =                    1.2*p4*atrigomorph                                                                                                      ;  Product of, Sine Wave and atrigomorph= ((imorphing-p4)*asine)+(p4+(p4/2))*acosine.asig32               =                    1.2*p4*aosc1*atrigomorph                                                                                         ;  Product of, Sine Wave and atrigomorph= ((imorphing-p4)*asine)+(p4+(p4/2))*acosine.; Note to myself-   Do "foscil" version later, using taking the product of atrigomorph & aosc-N in an FM form, where atrigomorph is modulated with one of the Pure Tone oscillators (aosc1-thru-aosc7). If using; aosc6 in there, then need to use a "morph" routine to create a PWM (Pulse Width Modulator), and delta-PWM it over time. Maybe get an LFO involved as well.; Filter Bank-afltr1                butterlp       asig31, p16afltr2                butterlp       asig31, p8afltr3                areson         asig31, p16*1.2, p17afltr4                areson         asig31, p8*1.8, p9; May want to have other filters in the mod-sys, including moog modules. Also add some waveguides while I'm at it.; Virtual Wall of Modules, in a Virtual Modular system set up- With all of the above function blocks to start with, it's like having a virtual world rack-mouted modular synth system. This template becomes the wall ; of modules to build from. Organized to be a straight forward easy to follow lay-out, because it's a mtter of knowing where one starts from, where they are, and where they are going when building these sounds. ; It's very easy to forget where you are, or using opcodes before they are previously declared when those "used before defined" messages start popping up during compiling. Therefore, this template should ; help illeviate some of that by making this a starting point to begin building from. Once a sound is create, I can always delete or cut out those unused or undeclared blocks, to thin things out for efficiency. ;So this can be thinned out or expanded on, according to one's own desires. From here you can "copy/paste", then relabel the different "blocks & ops" as needed. Enjoy the explorations.; Here is the patching area- where you patch together the function blocks here:asig4                =                    k4env2*asig31                                                                                                                  ;  Trigonometric Product Signalsasig5                =                    k3env1*asig31                                                                                                                  ;  Trigonometric Product Signalsasig6                =                    p4*k3env1*aosc1*aosc7* awvs6       asig7                =                    p4*k4env2*aosc1*aosc7* awvs6 asig8                =                    aosc3+aosc7asig9                =                    aosc1+aosc4asig10              =                    asig6+afltr1+afltr4asig11              =                    asig7+afltr2+afltr3                           outs              asig10, asig11                           display        asig10, p3                           display        asig11, p3                           dispfft          asig10, p3, 1024     ; Still having problems getting FFT to display a wave. Remind myself to contact Matt Ingalls about that. Wasn't a problem with the earlier version on my Mac 6400.                           dispfft          asig11, p3, 1024     ; Still having problems getting FFT to display a wave. Remind myself to contact Matt Ingalls about that. Wasn't a problem with the earlier version on my Mac 6400.endin;Thank you just the same Matt Ingalls. Thank you, thank you, thank you.</CsInstruments><CsScore>; PBS - PBS - Modular Template; PBS - PBS - MT01.sco; Pure Tone Tables;Tab   Time    Size   GEN                             Function                                                                                                 Description;  #      beats   bits       #           trnsfr fnctn/ harm-partials ampltds                                                                     comments;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------f  1          0       4096    10            1                                                                                                                                ;  Sine Wavef  2          0       1024      7           -1    512    1    512    -1                                                                                            ;  Triangle Wavef  3          0       1024      7            1    1024    -1                                                                                                           ;  Sawtooth Wavef  4          0       1024      7           -1    1024     1                                                                                                           ;  Ramp Wavef  5          0       1024      7            1    512        1    0    -1    512    -1                                                                          ;  Square Wave   f  6          0       128        7             1    1    1    1    1    0    0    0                                                                                    ;  Pulse Wavef  7          0       1024    10            1    0    .3333    0    .2    0    .142857    0    .1111    0    .0909091    0    .076923    0    .0666667    0    .05882    0    .052632    0    .04762    0    .043478261    ;  Harmonic Sine Sum Square Wave; Waveshapes and Complex Transfer Functions Tables;Tab   Time    Size   GEN                             Function                                                                                                 Description;  #      beats   bits       #           trnsfr fnctn/ harm-partials ampltds                                                                     comments;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------f  8          0        512       7           -1    100    -1    312    1    100    1                                                                            ;  Waveshape 1- Linear Transfer Function (LTF)f  9          0        1024     7           -1    256    -1    512    1    256    1                                                                            ;  Waveshape 2- Transfer Function 2f  10        0        1024     7            1    256     1    512   -1    256   -1                                                                            ;  Waveshape 3- Transfer Function 3f  11        0        1024    -12         60                                                                                                                                ;  Waveshape 4- Bessel Function (0 to 60)f  12        0        1024     7            0    100    -0.5    100    -1    624    1    100    0.5    100    0                                 ;  Waveshape 5- Transfer Function 5f  14        0        1024     7            0    75    -0.5    75    -0.8    75    -1    75    -0.9    424    0.9    75    1    75    0.8    75    0.5    75    0        ;  Waveshape 6- S-Curve Transfer Functionf  15        0        1024     7            21    1    1                                                                                                                   ;  Waveshape 7- Uniform Noise Generator;     p1     p2     p3        p4          p5          p6       p7       p8        p9     p10       p11     p12        p13    p14      p15   p16       p17;  Instr   Strt   Dur    Amp      Freq     functn    ib       Fco2    BW   idur1    idur2    iatt1       idec   islev    irel    Fco2     BW2;============================================================================================================================================================================i  0705     0       2      10000    65.406      0        200      240     150     2.0       2.0     0.0125     0.25    2.0      3.8     120        80i  0705     2       4      10000    97.999      0        200      240     150     2.0       2.0     0.0125     0.25    2.0      3.8     120        80</CsScore></CsoundSynthesizer><MacOptions>Version: 3Render: RealAsk: YesSFDIR: //Mac Csound StuffFunctions: ioObjectWindowBounds: 10 48 1278 800Options: -b128 -3 -m7 -Z -R </MacOptions><MacGUI>ioView background {60108, 65535, 63132}
ioListing {167, 356} {558, 242}ioSlider {93, 11} {34, 247} 20.000000 2000.000000 1806.751953 pitchioKnob {39, 79} {48, 48} 0.000000 1.000000 0.010000 0.000000 ioGraph {166, 4} {868, 337}ioMenu {5, 437} {150, 34} 1 202 "item1,item2,item3" ioMenu {5, 348} {150, 34} 1 202 "item1,item2,item3" ioMenu {4, 267} {150, 34} 1 202 "item1,item2,item3" ioCheckbox {47, 10} {34, 32} off ioMeter {2, 5} {34, 249} {44563, 53738, 65535} "" 0.000000 "" 0.000000 fill 1 0 mouse</MacGUI>