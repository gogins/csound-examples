<blueData version='0.107.0'>
  <projectProperties>
    <title>Diffamator</title>
    <author>Andres Cabrera</author>
    <notes>Diffamator Version 0.91
by Andr√©s Cabrera (GUI by my wife Cristina =) )
Released under the GPL license.

Diffamator is an MIDI controlled FM synth which can be randomized to find interesting sounds. It features the same algorithms available in the Yamaha DX7 synth, but might not really sound exactly like it, since not all of the synth is implemented. It can also store presets in one of its 30 memory slots.

SETUP
To use Diffamator you need some sort of MIDI controller transmitting on channel 1, either a physical one, or some software emulation (even a sequencer transmitting via a virtual MIDI cable).
You will need to tell csound to run in realtime with audio output and MIDI input, which varies according to platform. Consult the csound manual for more detail.
Diffamator requires csound 5.02 (older version will not support preset saving).
You can adjust maximum polyphony for your system with the opcode maxalloc.
The ksmps size has a very clear effect on the sound of feedback. Lower values yield a &apos;smoother&apos; Feedback but reduces polyphony.

USING
MIDI notes (on channel 1) to trigger the sound. You can control each FM operator&apos;s ADSR envelope, frequency ratio and phase separately, or you can use the transformation buttons to randomize and manipulate parameters. Diffamator uses the same algorithms as the Yamaha DX7. You can find them at:
http://www.adp-gmbh.ch/csound/dx7/algorithms.html

The transformation buttons do the following (the letter in parenthesis determines the key that can trigger that button):

Rand Mus (q)- Randomizes all Operator parameters, algorithm and feedback but keeping ratios in 0.5 multiple ratios, which tend to generate harmonic spectra

Rand FX (w)- Exactly as before, but ratios are completely randomized, generating mostly noisy and in-harmonic spectra

Attackify (e)- Shortens the attack and decay times, and decreases sustain level to all operators, effectively making the sound more percussive.

Padify (r)- Lengthens the attack and decay times to smooth the onset of the sound

+ Harm (t)- Moves the frequency ratios toward multiples of 0.5, making the sound tend to a more harmonic spectrum

- Harm (y)- Slightly randomizes the frequency ratios, slowly turning a harmonic sound into an in-harmonic one.

Switch + (u)- Switches Operator parameters one operator down

Switch - (i)- Switches Operator parameters one operator up.

You can also use the &apos;i Print&apos; button to generate a score file line which will trigger the current sound using only instrument 1 (i.e. you only need instrument 1 if you use this line. All the rest, including the FLTK opcodes can be discarded). This is useful for using diffamator in your own compositions. In the GUI you can set the base frequency, duration and velocity of the event. Otherwise, you can modify the p-fields of the generated score event. p3 is duration, p4 is base frequency, and p5 is the velocity (1-127).
The lock toggle locks the algorithm so it&apos;s not modified when Diffamator is randomized. Using the lock toggle will invalidate key commands, since the focus goes to the toggle....

Other Keyboard shortcuts
---------------------
o - Increments the algorithm number
p - Decrements the algorithm number

Presets
-------
To recall presets, just press the preset button. To store a preset, Press the &apos;Store&apos; button until it is lit, and the press the destination preset.
Note that you cannot currently save to the selected preset, you must store to another preset.

To kill Diffamator you can press the red strip with the black circle over the title.

Please send problems, comments and suggestions to andres at geminiflux [dot] com or the csound mailing list.

Enjoy!
</notes>
    <sampleRate>44100</sampleRate>
    <ksmps>128</ksmps>
    <channels>2</channels>
    <diskSampleRate>44100</diskSampleRate>
    <diskKsmps>128</diskKsmps>
    <diskChannels>2</diskChannels>
    <useAudioOut>true</useAudioOut>
    <useAudioIn>false</useAudioIn>
    <useMidiIn>true</useMidiIn>
    <useMidiOut>false</useMidiOut>
    <noteAmpsEnabled>false</noteAmpsEnabled>
    <outOfRangeEnabled>false</outOfRangeEnabled>
    <warningsEnabled>false</warningsEnabled>
    <benchmarkEnabled>false</benchmarkEnabled>
    <advancedSettings>--env:CSNOSTOP=yes </advancedSettings>
    <completeOverride>false</completeOverride>
    <fileName></fileName>
    <askOnRender>false</askOnRender>
    <diskNoteAmpsEnabled>true</diskNoteAmpsEnabled>
    <diskOutOfRangeEnabled>true</diskOutOfRangeEnabled>
    <diskWarningsEnabled>true</diskWarningsEnabled>
    <diskBenchmarkEnabled>true</diskBenchmarkEnabled>
    <diskAdvancedSettings></diskAdvancedSettings>
    <diskCompleteOverride>false</diskCompleteOverride>
  </projectProperties>
  <arrangement>
    <instrumentAssignment arrangementId='1' isEnabled='true'>
      <instrument type='blue.orchestra.GenericInstrument'>
        <name>FM synth</name>
        <comment></comment>
        <globalOrc></globalOrc>
        <globalSco></globalSco>
        <instrumentText>
midinoteoncps	p4,p5

;icps cpsmidi
;iveloc veloc 4000, 15000

icps init p4
iveloc init ((p5/127)*11000)+4000

mididefault  i(gkalgo),p6
mididefault  i(gkfeedback),p7
mididefault -i(gkatt1), p8
mididefault -i(gkdec1), p9
mididefault -i(gksus1), p10
mididefault -i(gkrel1), p11
mididefault i(gkrat1), p12
mididefault -i(gklvl1), p13
acps1 init icps*-p12
ifn1 init gisine

mididefault -i(gkatt2), p14
mididefault -i(gkdec2), p15
mididefault -i(gksus2), p16
mididefault -i(gkrel2), p17
mididefault i(gkrat2), p18
mididefault -i(gklvl2), p19
acps2 init icps*-p18
ifn2 init gisine

mididefault -i(gkatt3), p20
mididefault -i(gkdec3), p21
mididefault -i(gksus3), p22
mididefault -i(gkrel3), p23
mididefault i(gkrat3), p24
mididefault -i(gklvl3), p25
acps3 init icps*-p24
ifn3 init gisine

mididefault -i(gkatt4), p26
mididefault -i(gkdec4), p27
mididefault -i(gksus4), p28
mididefault -i(gkrel4), p29
mididefault i(gkrat4), p30
mididefault -i(gklvl4), p31
acps4 init icps*-p30
ifn4 init gisine

mididefault -i(gkatt5), p32
mididefault -i(gkdec5), p33
mididefault -i(gksus5), p34
mididefault -i(gkrel5), p35
mididefault i(gkrat5), p36
mididefault -i(gklvl5), p37
acps5 init icps*-p36
ifn5 init gisine

mididefault -i(gkatt6), p38
mididefault -i(gkdec6), p39
mididefault -i(gksus6), p40
mididefault -i(gkrel6), p41
mididefault i(gkrat6), p42
mididefault -i(gklvl6), p43
acps6 init icps*-p42
ifn6 init gisine


kamp init iveloc

ialgo = p6

;--------------OP6
;Check if op6 has feedback
if (ialgo==2)||(ialgo==8)||(ialgo==9)||(ialgo==10)|| \
  (ialgo==12)||(ialgo==15)||(ialgo==15)||(ialgo==18)|| \
  (ialgo==20)||(ialgo==21)||(ialgo==27)||(ialgo==28)|| \
  (ialgo==30) then
afrq6 = acps6  ;no feedback
else
afrq6 = acps6 + (gafeedback*acps6)  ;feedback
endif

aphs6 phasor afrq6
aop6  tablei	aphs6, ifn6, 1
aenv6 mxadsr	p38,p39,p40,p41
aop6 = aop6 * aenv6

;Check if op6 feeds the feedback loop
if (ialgo==2)||(ialgo==8)||(ialgo==9)||(ialgo==10)|| \
  (ialgo==12)||(ialgo==15)||(ialgo==15)||(ialgo==18)|| \
  (ialgo==20)||(ialgo==21)||(ialgo==27)||(ialgo==28)|| \
  (ialgo==30) goto nofb6
gafeedback = aop6 * p7
nofb6:
;Check if op6 doesn&apos;t modulate
if (ialgo==28)||(ialgo==30)||(ialgo==32) then
aop6 = aop6 * -p43 * kamp
else
aop6 = aop6 * -p43
endif

;--------------OP5

;Check if op5 has feedback
if (ialgo==28)||(ialgo==30) then
afrq5 = acps5 + (gafeedback*acps5)  ;feedback
;Check if not modulated
elseif (ialgo==10)||(ialgo==11)||(ialgo==12)||(ialgo==13)|| \
  (ialgo==14)||(ialgo==15)||(ialgo==20)||(ialgo==26)|| \ 
  (ialgo==27)||(ialgo==32) then
afrq5 = acps5  ;no modulation
else
afrq5 = acps5 + (aop6*acps5) ;modulated by op6
endif

aphs5 phasor afrq5
aop5  tablei	aphs5, ifn5, 1
aenv5 mxadsr	p32, p33, p34, p35
aop5 = aop5 * aenv5

;Check if op5 feeds the feedback loop
if (ialgo==6)||(ialgo==28)||(ialgo==30) then
gafeedback = aop5 * p7
endif
;Check if op5 doesn&apos;t modulate
if (ialgo==5)||(ialgo==6)||(ialgo==19)||(ialgo==21)|| \
  (ialgo==22)||(ialgo==23)||(ialgo==24)||(ialgo==25)|| \ 
  (ialgo==29)||(ialgo==31)||(ialgo==32) then
aop5 = aop5 * -p37 * kamp
else
aop5 = aop5 * -p37
endif

;--------------OP4

;Check if op4 has feedback
if (ialgo==8) then
afrq4 = acps4 + (gafeedback*acps4)  ;feedback
;Check if modulated
elseif (ialgo==1)||(ialgo==2)||(ialgo==3)||(ialgo==4)|| \
  (ialgo==18)||(ialgo==20)||(ialgo==26)|| \ 
  (ialgo==27)||(ialgo==28)||(ialgo==30) then
afrq4 = acps4 + (aop5*acps4) ;modulated by op5
elseif (ialgo==10)||(ialgo==11)||(ialgo==14)||(ialgo==15)|| \ 
  (ialgo==19)||(ialgo==21)||(ialgo==22)||(ialgo==23)|| \
  (ialgo==24)||(ialgo==25) then
afrq4 = acps4 + (aop6*acps4) ;modulated by op6
else
afrq4 = acps4  ;no modulation
endif

aphs4 phasor afrq4
aop4  tablei	aphs4, ifn4, 1
aenv4 mxadsr	p26,p27,p28,p29
aop4 = aop4 * aenv4

;Check if op4 feeds the feedback loop
if (ialgo==4) then
gafeedback = aop4 * p7
endif
;Check if op4 doesn&apos;t modulate
if (ialgo==3)||(ialgo==4)||(ialgo==10)||(ialgo==11)|| \
  (ialgo==19)||(ialgo==20)||(ialgo==21)||(ialgo==22)|| \ 
  (ialgo==23)||(ialgo==24)||(ialgo==25)||(ialgo==26)|| \ 
  (ialgo==27)||(ialgo==31)||(ialgo==32) then
aop4 = aop4 * -p31 * kamp
else
aop4 = aop4 * -p31
endif

;--------------OP3

;Check if op3 has feedback
if (ialgo==10)||(ialgo==18)||(ialgo==20)||(ialgo==21)||  \
  (ialgo==27) then
afrq3 = acps3 + (gafeedback*acps3)  ;feedback
;Check if modulated
elseif (ialgo==1)||(ialgo==2)||(ialgo==5)||(ialgo==6)|| \
  (ialgo==9)||(ialgo==12) then
afrq3 = acps3 + (aop4*acps3) ;modulated by op4
elseif (ialgo==7)||(ialgo==8)||(ialgo==9) then
afrq3 = acps3 + (aop4*acps3) + (aop5*acps3) ;modulated by op4+op5
elseif (ialgo==12)||(ialgo==13) then
afrq3 = acps3 + (aop4*acps3) + (aop5*acps3) + (aop6*acps3)
;modulated by op4+op5+op6
elseif (ialgo==14)||(ialgo==15)||(ialgo==16)||(ialgo==17)|| \
  (ialgo==28)||(ialgo==29)||(ialgo==30) then
afrq3 = acps3 + (aop4*acps3) ;modulated by op4
elseif (ialgo==22)||(ialgo==24) then
afrq3 = acps3 + (aop6*acps3) ;modulated by op6
else
afrq3 = acps3  ;no modulation
endif

aphs3 phasor afrq3
aop3  tablei	aphs3, ifn3, 1
aenv3 mxadsr	p20,p21, p22, p23
aop3 = aop3 * aenv3

;Check if op4 feeds the feedback loop
if (ialgo==10)||(ialgo==18)||(ialgo==20)||(ialgo==21)||  \
   (ialgo==27) then
gafeedback = aop3 * p7
endif
;Check if op3 doesn&apos;t modulate
if (ialgo==1)||(ialgo==2)||(ialgo==5)||(ialgo==6)|| \
  (ialgo==7)||(ialgo==8)||(ialgo==9)||(ialgo==12)|| \ 
  (ialgo==13)||(ialgo==14)||(ialgo==15)||(ialgo==22)|| \ 
  (ialgo==24)||(ialgo==25)||(ialgo==28)||(ialgo==29)|| \ 
  (ialgo==30)||(ialgo==31)||(ialgo==32) then
aop3 = aop3 * -p25 * kamp
else
aop3 = aop3 * -p25
endif

;--------------OP2

;Check if op2 has feedback
if (ialgo==2)||(ialgo==9)||(ialgo==12)||(ialgo==15)||  \
  (ialgo==17) then
afrq2 = acps2 + (gafeedback*acps2)  ;feedback
;Check if modulated
elseif (ialgo==3)||(ialgo==4)||(ialgo==10)||(ialgo==11)|| \
  (ialgo==19)||(ialgo==20)||(ialgo==21)||(ialgo==23)|| \
  (ialgo==26)||(ialgo==27) then
afrq2 = acps2 + (aop3*acps2) ;modulated by op3
else
afrq2 = acps2  ;no modulation
endif

aphs2 phasor afrq2
aop2  tablei	aphs2, ifn2, 1
aenv2 mxadsr	p14, p15, p16, p17
aop2 = aop2 * aenv2

;Check if op4 feeds the feedback loop
if (ialgo==2)||(ialgo==9)||(ialgo==12)||(ialgo==15)||  \
  (ialgo==17) then
gafeedback = aop2 * p7
endif
;Check if op2 doesn&apos;t modulate
if (ialgo==20)||(ialgo==21)||(ialgo==23)||(ialgo==24)|| \
  (ialgo==25)||(ialgo==26)||(ialgo==27)||(ialgo==29)|| \ 
  (ialgo==30)||(ialgo==31)||(ialgo==32) then
aop2 = aop2 * -p19 * kamp
else
aop2 = aop2 * -p19
endif

;--------------OP1

;op1 never has feedback
;Check if NOT modulated
if (ialgo==23)||(ialgo==24)||(ialgo==25)||(ialgo==26)||  \
  (ialgo==27)||(ialgo==29)||(ialgo==30)||(ialgo==31)||  \
  (ialgo==32) then
afrq1 = acps1 ;no modulation
elseif (ialgo==16)||(ialgo==17) then
afrq1 = acps1 + (aop2*acps1) + (aop3*acps1) + (aop5*acps1)
;modulated by op2, op3 and op5
elseif (ialgo==18) then
afrq1 = acps1 + (aop2*acps1) + (aop3*acps1) + (aop4*acps1)
;modulated by op2, op3 and op4
elseif (ialgo==20)||(ialgo==21) then
afrq1 = acps1 + (aop3*acps1) ;modulated by op3
else
afrq1 = acps1 + (aop2*acps1)  ;modulated by op2
endif

aphs1 phasor afrq1
aop1  tablei	aphs1, ifn1, 1
aenv1 mxadsr	p8, p9, p10, p11
aop1 = aop1 * aenv1

;op1 never modulates
aop1 = aop1 * -p13 * kamp

;------------MIX OPS
if (ialgo==1 ) then
aout = aop1 + aop3
elseif (ialgo==2 ) then
aout = aop1 + aop3
elseif (ialgo==3 ) then
aout = aop1 + aop4
elseif (ialgo==4 ) then
aout = aop1 + aop4
elseif (ialgo==5 ) then
aout = aop1 + aop3 + aop5
elseif (ialgo==6 ) then
aout = aop1 + aop3 + aop5
elseif (ialgo==7 ) then
aout = aop1 + aop3
elseif (ialgo==8 ) then
aout = aop1 + aop3
elseif (ialgo==9 ) then
aout = aop1 + aop3
elseif (ialgo==10 ) then
aout = aop1 + aop4
elseif (ialgo==11 ) then
aout = aop1 + aop4
elseif (ialgo==12 ) then
aout = aop1 + aop3
elseif (ialgo==13 ) then
aout = aop1 + aop3
elseif (ialgo==14 ) then
aout = aop1 + aop3
elseif (ialgo==15 ) then
aout = aop1 + aop3
elseif (ialgo==16 ) then
aout = aop1
elseif (ialgo==17 ) then
aout = aop1
elseif (ialgo==18 ) then
aout = aop1
elseif (ialgo==19 ) then
aout = aop1 + aop4 + aop5
elseif (ialgo==20 ) then
aout = aop1 + aop2 + aop4
elseif (ialgo==21 ) then
aout = aop1 + aop2 + aop4 + aop5
elseif (ialgo==22 ) then
aout = aop1 + aop3 + aop4 + aop5
elseif (ialgo==23 ) then
aout = aop1 + aop2 + aop4 + aop5
elseif (ialgo==24 ) then
aout = aop1 + aop2 + aop3 + aop4 + aop5
elseif (ialgo==25 ) then
aout = aop1 + aop2 + aop3 + aop4 + aop5
elseif (ialgo==26 ) then
aout = aop1 + aop2 + aop4
elseif (ialgo==27 ) then
aout = aop1 + aop2 + aop4
elseif (ialgo==28 ) then
aout = aop1 + aop3 + aop6
elseif (ialgo==29 ) then
aout = aop1 + aop2 + aop3 + aop5
elseif (ialgo==30 ) then
aout = aop1 + aop2 + aop3 + aop6
elseif (ialgo==31 ) then
aout = aop1 + aop2 + aop3 + aop4 + aop5
elseif (ialgo==32 ) then
aout = aop1 + aop2 + aop3 + aop4 + aop5 + aop6
endif


outs  aout, aout
</instrumentText>
      </instrument>
    </instrumentAssignment>
    <instrumentAssignment arrangementId='2' isEnabled='true'>
      <instrument type='blue.orchestra.GenericInstrument'>
        <name>Randomize FX</name>
        <comment></comment>
        <globalOrc></globalOrc>
        <globalSco></globalSco>
        <instrumentText>irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihlvl1
#else
gklvl1 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihlvl2
#else
gklvl2 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihlvl3
#else
gklvl3 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihlvl4
#else
gklvl4 = irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihlvl5
#else
gklvl5 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihlvl6
#else
gklvl6 init irand
#endif


irand random  0,3
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrat1
#else
gkrat1 init irand
#endif
irand random  0,3
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrat2
#else
gkrat2 init irand
#endif
irand random  0,3
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrat3
#else
gkrat3 init irand
#endif
irand random  0,3
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrat4
#else
gkrat4 init irand
#endif
irand random  0,3
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrat5
#else
gkrat5 init irand
#endif
irand random  0,3
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrat6
#else
gkrat6 init irand
#endif

irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihatt1
#else
gkatt1 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihatt2
#else
gkatt2 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihatt3
#else
gkatt3 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihatt4
#else
gkatt4 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihatt5
#else
gkatt5 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihatt6
#else
gkatt6 init irand
#endif
irand random  -0.5,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihdec1
#else
gkdec1 init irand
#endif
irand random  -0.5,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihdec2
#else
gkdec2 init irand
#endif
irand random  -0.5,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihdec3
#else
gkdec3 init irand
#endif
irand random  -0.5,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihdec4
#else
gkdec4 init irand
#endif
irand random  -0.5,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihdec5
#else
gkdec5 init irand
#endif
irand random  -0.5,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihdec6
#else
gkdec6 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihsus1
#else
gksus1 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihsus2
#else
gksus2 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihsus3
#else
gksus3 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihsus4
#else
gksus4 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihsus5
#else
gksus5 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihsus6
#else
gksus6 init irand
#endif
irand random  -3,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrel1
#else
gkrel1 init irand
#endif
irand random  -3,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrel2
#else
gkrel2 init irand
#endif
irand random  -3,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrel3
#else
gkrel3 init irand
#endif
irand random  -3,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrel4
#else
gkrel4 init irand
#endif
irand random  -3,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrel5
#else
gkrel5 init irand
#endif
irand random  -3,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrel6
#else
gkrel6 init irand
#endif

if (i(gkalglock)==0) then
irand random  1,32
irand = int(irand)
#ifdef ENABLEFL
FLsetVal_i 	irand, gihalgo
#else
gkalgo init irand
#endif
endif

irand random  0,1
#ifdef ENABLEFL
FLsetVal_i 	irand, gihfeedback
#else
gkfeedback init irand
#endif

turnoff</instrumentText>
      </instrument>
    </instrumentAssignment>
    <instrumentAssignment arrangementId='3' isEnabled='true'>
      <instrument type='blue.orchestra.GenericInstrument'>
        <name>Randomize Mus</name>
        <comment></comment>
        <globalOrc></globalOrc>
        <globalSco></globalSco>
        <instrumentText>irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihlvl1
#else
gklvl1 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihlvl2
#else
gklvl2 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihlvl3
#else
gklvl3 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihlvl4
#else
gklvl4 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihlvl5
#else
gklvl5 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihlvl6
#else
gklvl6 init irand
#endif


irand random  0,11
irand = (int(irand)/2)+0.5
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrat1
#else
gkrat1 init irand
#endif
ialgoirand random  0,11
irand = (int(irand)/2)+0.5
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrat2
#else
gkrat2 init irand
#endif
ialgoirand random  0,11
irand = (int(irand)/2)+0.5
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrat3
#else
gkrat3 init irand
#endif
ialgoirand random  0,11
irand = (int(irand)/2)+0.5
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrat4
#else
gkrat4 init irand
#endif
ialgoirand random  0,11
irand = (int(irand)/2)+0.5
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrat5
#else
gkrat5 init irand
#endif
ialgoirand random  0,11
irand = (int(irand)/2)+0.5
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrat6
#else
gkrat6 init irand
#endif

irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihatt1
#else
gkatt1 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihatt2
#else
gkatt2 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihatt3
#else
gkatt3 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihatt4
#else
gkatt4 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihatt5
#else
gkatt5 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihatt6
#else
gkatt6 init irand
#endif
irand random  -0.5,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihdec1
#else
gkdec1 init irand
#endif
irand random  -0.5,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihdec2
#else
gkdec2 init irand
#endif
irand random  -0.5,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihdec3
#else
gkdec3 init irand
#endif
irand random  -0.5,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihdec4
#else
gkdec4 init irand
#endif
irand random  -0.5,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihdec5
#else
gkdec5 init irand
#endif
irand random  -0.5,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihdec6
#else
gkdec6 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihsus1
#else
gkdec1 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihsus2
#else
gkdec2 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihsus3
#else
gkdec3 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihsus4
#else
gkdec4 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihsus5
#else
gkdec5 init irand
#endif
irand random  -1,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihsus6
#else
gkdec6 init irand
#endif
irand random  -3,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrel1
#else
gkrel1 init irand
#endif
irand random  -3,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrel2
#else
gkrel2 init irand
#endif
irand random  -3,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrel3
#else
gkrel3 init irand
#endif
irand random  -3,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrel4
#else
gkrel4 init irand
#endif
irand random  -3,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrel5
#else
gkrel5 init irand
#endif
irand random  -3,0
#ifdef ENABLEFL
FLsetVal_i 	irand, gihrel6
#else
gkrel6 init irand
#endif

if (i(gkalglock)==0) then
irand random  1,32
irand = int(irand)
#ifdef ENABLEFL
FLsetVal_i 	irand, gihalgo
#else
gkalgo init irand
#endif
endif

irand random  0,0.5
#ifdef ENABLEFL
FLsetVal_i 	irand, gihfeedback
#else
gkfeedback init irand
#endif

turnoff</instrumentText>
      </instrument>
    </instrumentAssignment>
    <instrumentAssignment arrangementId='4' isEnabled='true'>
      <instrument type='blue.orchestra.GenericInstrument'>
        <name>Randomize more harm</name>
        <comment></comment>
        <globalOrc></globalOrc>
        <globalSco></globalSco>
        <instrumentText>irat = i(gkrat1)
inewrat = ((irat*4) + (int ((irat*2)+0.5) /2))/5
#ifdef ENABLEFL
FLsetVal_i 	inewrat, gihrat1
#else
gkrat1 = inewrat
#endif
irat = i(gkrat2)
inewrat = ((irat*4) + (int ((irat*2)+0.5) /2))/5
#ifdef ENABLEFL
FLsetVal_i 	inewrat, gihrat2
#else
gkrat2 = inewrat
#endif
irat = i(gkrat3)
inewrat = ((irat*4) + (int ((irat*2)+0.5) /2))/5
#ifdef ENABLEFL
FLsetVal_i 	inewrat, gihrat3
#else
gkrat3 = inewrat
#endif
irat = i(gkrat4)
inewrat = ((irat*4) + (int ((irat*2)+0.5) /2))/5
#ifdef ENABLEFL
FLsetVal_i 	inewrat, gihrat4
#else
gkrat4 = inewrat
#endif
irat = i(gkrat5)
inewrat = ((irat*4) + (int ((irat*2)+0.5) /2))/5
#ifdef ENABLEFL
FLsetVal_i 	inewrat, gihrat5
#else
gkrat5 = inewrat
#endif
irat = i(gkrat6)
inewrat = ((irat*4) + (int ((irat*2)+0.5) /2))/5
#ifdef ENABLEFL
FLsetVal_i 	inewrat, gihrat6
#else
gkrat6 = inewrat
#endif

turnoff</instrumentText>
      </instrument>
    </instrumentAssignment>
    <instrumentAssignment arrangementId='5' isEnabled='true'>
      <instrument type='blue.orchestra.GenericInstrument'>
        <name>Randomize less harm</name>
        <comment></comment>
        <globalOrc></globalOrc>
        <globalSco></globalSco>
        <instrumentText>irat = i(gkrat1)
irand random  -0.02,0.02
inew = irat + irand
#ifdef ENABLEFL
FLsetVal_i 	inew, gihrat1
#else
gkrat1 = inew
#endif
irat = i(gkrat2)
irand random  -0.02,0.02
inew = irat + irand
#ifdef ENABLEFL
FLsetVal_i 	inew, gihrat2
#else
gkrat2 = inew
#endif
irat = i(gkrat3)
irand random  -0.02,0.02
inew = irat + irand
#ifdef ENABLEFL
FLsetVal_i 	inew, gihrat3
#else
gkrat3 = inew
#endif
irat = i(gkrat4)
irand random  -0.02,0.02
inew = irat + irand
#ifdef ENABLEFL
FLsetVal_i 	inew, gihrat4
#else
gkrat4 = inew
#endif
irat = i(gkrat5)
irand random  -0.02,0.02
inew = irat + irand
#ifdef ENABLEFL
FLsetVal_i 	inew, gihrat5
#else
gkrat5 = inew
#endif
irat = i(gkrat6)
irand random  -0.02,0.02
inew = irat + irand
#ifdef ENABLEFL
FLsetVal_i 	inew, gihrat6
#else
gkrat6 = inew
#endif

turnoff
</instrumentText>
      </instrument>
    </instrumentAssignment>
    <instrumentAssignment arrangementId='6' isEnabled='true'>
      <instrument type='blue.orchestra.GenericInstrument'>
        <name>Attackify</name>
        <comment></comment>
        <globalOrc></globalOrc>
        <globalSco></globalSco>
        <instrumentText>
ival = i(gkatt1)
ival = (ival&lt;-0.01?ival+0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt1
#else
gkatt1 = ival
#endif
ival = i(gkatt2)
ival = (ival&lt;-0.01?ival+0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt2
#else
gkatt2 = ival
#endif
ival = i(gkatt3)
ival = (ival&lt;-0.01?ival+0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt3
#else
gkatt3 = ival
#endif
ival = i(gkatt4)
ival = (ival&lt;-0.01?ival+0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt4
#else
gkatt4 = ival
#endif
ival = i(gkatt5)
ival = (ival&lt;-0.01?ival+0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt5
#else
gkatt5 = ival
#endif
ival = i(gkatt6)
ival = (ival&lt;-0.01?ival+0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt6
#else
gkatt6 = ival
#endif
ival = i(gkdec1)
ival = (ival&lt;-0.01?ival+0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec1
#else
gkdec1 = ival
#endif
ival = i(gkdec2)
ival = (ival&lt;-0.01?ival+0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec2
#else
gkdec2 = ival
#endif
ival = i(gkdec3)
ival = (ival&lt;-0.01?ival+0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec3
#else
gkdec3 = ival
#endif
ival = i(gkdec4)
ival = (ival&lt;-0.01?ival+0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec4
#else
gkdec4 = ival
#endif
ival = i(gkdec5)
ival = (ival&lt;-0.01?ival+0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec5
#else
gkdec5 = ival
#endif
ival = i(gkdec6)
ival = (ival&lt;-0.01?ival+0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec6
#else
gkdec6 = ival
#endif
ival = i(gksus1)
ival = (ival&lt;-0.01?ival+0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihsus1
#else
gksus1 = ival
#endif
ival = i(gksus2)
ival = (ival&lt;-0.01?ival+0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihsus2
#else
gksus2 = ival
#endif
ival = i(gksus3)
ival = (ival&lt;-0.01?ival+0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihsus3
#else
gksus3 = ival
#endif
ival = i(gksus4)
ival = (ival&lt;-0.01?ival+0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihsus4
#else
gksus4 = ival
#endif
ival = i(gksus5)
ival = (ival&lt;-0.01?ival+0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihsus5
#else
gksus5 = ival
#endif
ival = i(gksus6)
ival = (ival&lt;-0.01?ival+0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihsus6
#else
gksus6 = ival
#endif</instrumentText>
      </instrument>
    </instrumentAssignment>
    <instrumentAssignment arrangementId='7' isEnabled='true'>
      <instrument type='blue.orchestra.GenericInstrument'>
        <name>Padify</name>
        <comment></comment>
        <globalOrc></globalOrc>
        <globalSco></globalSco>
        <instrumentText>
ival = i(gkatt1)
ival = (ival&gt;-1?ival-0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt1
#else
gkatt1 = ival
#endif
ival = i(gkatt2)
ival = (ival&gt;-1?ival-0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt2
#else
gkatt2 = ival
#endif
ival = i(gkatt3)
ival = (ival&gt;-1?ival-0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt3
#else
gkatt3 = ival
#endif
ival = i(gkatt4)
ival = (ival&gt;-1?ival-0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt4
#else
gkatt4 = ival
#endif
ival = i(gkatt5)
ival = (ival&gt;-1?ival-0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt5
#else
gkatt5 = ival
#endif
ival = i(gkatt6)
ival = (ival&gt;-1?ival-0.01:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt6
#else
gkatt6 = ival
#endif
ival = i(gkdec1)
ival = (ival&gt;-0.5?ival-0.005:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec1
#else
gkdec1 = ival
#endif
ival = i(gkdec2)
ival = (ival&gt;-0.5?ival-0.005:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec2
#else
gkdec2 = ival
#endif
ival = i(gkdec3)
ival = (ival&gt;-0.5?ival-0.005:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec3
#else
gkdec3 = ival
#endif
ival = i(gkdec4)
ival = (ival&gt;-0.5?ival-0.005:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec4
#else
gkdec4 = ival
#endif
ival = i(gkdec5)
ival = (ival&gt;-0.5?ival-0.005:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec5
#else
gkdec5 = ival
#endif
ival = i(gkdec6)
ival = (ival&gt;-0.5?ival-0.005:ival)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec6
#else
gkdec6 = ival
#endif
/*ival = i(gksus1)
ival = (ival&lt;-0.01?ival+0.01:ival)
FLsetVal_i 	ival, gihsus1
ival = i(gksus2)
ival = (ival&lt;-0.01?ival+0.01:ival)
FLsetVal_i 	ival, gihsus2
ival = i(gksus3)
ival = (ival&lt;-0.01?ival+0.01:ival)
FLsetVal_i 	ival, gihsus3
ival = i(gksus4)
ival = (ival&lt;-0.01?ival+0.01:ival)
FLsetVal_i 	ival, gihsus4
ival = i(gksus5)
ival = (ival&lt;-0.01?ival+0.01:ival)
FLsetVal_i 	ival, gihsus5
ival = i(gksus6)
ival = (ival&lt;-0.01?ival+0.01:ival)
FLsetVal_i 	ival, gihsus6*/</instrumentText>
      </instrument>
    </instrumentAssignment>
    <instrumentAssignment arrangementId='8' isEnabled='true'>
      <instrument type='blue.orchestra.GenericInstrument'>
        <name>Switch +</name>
        <comment></comment>
        <globalOrc></globalOrc>
        <globalSco></globalSco>
        <instrumentText>
ival = i(gklvl5)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihlvl6
#else
gklvl6 = ival
#endif
ival = i(gklvl4)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihlvl5
#else
gklvl5 = ival
#endif
ival = i(gklvl3)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihlvl4
#else
gklvl4 = ival
#endif
ival = i(gklvl2)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihlvl3
#else
gklvl3 = ival
#endif
ival = i(gklvl1)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihlvl2
#else
gklvl2 = ival
#endif
ival = i(gklvl6)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihlvl1
#else
gklvl1 = ival
#endif

ival = i(gkrat5)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrat6
#else
gkrat6 = ival
#endif
ival = i(gkrat4)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrat5
#else
gkrat5 = ival
#endif
ival = i(gkrat3)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrat4
#else
gkrat4 = ival
#endif
ival = i(gkrat2)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrat3
#else
gkrat3 = ival
#endif
ival = i(gkrat1)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrat2
#else
gkrat2 = ival
#endif
ival = i(gkrat6)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrat1
#else
gkrat1 = ival
#endif

ival = i(gkinv5)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihinv6
#else
gkinv6 = ival
#endif
ival = i(gkinv4)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihinv5
#else
gkinv5 = ival
#endif
ival = i(gkinv3)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihinv4
#else
gkinv4 = ival
#endif
ival = i(gkinv2)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihinv3
#else
gkinv3 = ival
#endif
ival = i(gkinv1)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihinv2
#else
gkinv2 = ival
#endif
ival = i(gkinv6)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihinv1
#else
gkinv1 = ival
#endif

ival = i(gkatt5)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt6
#else
gkatt6 = ival
#endif
ival = i(gkatt4)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt5
#else
gkatt5 = ival
#endif
ival = i(gkatt3)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt4
#else
gkatt4 = ival
#endif
ival = i(gkatt2)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt3
#else
gkatt3 = ival
#endif
ival = i(gkatt1)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt2
#else
gkatt2 = ival
#endif
ival = i(gkatt6)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt1
#else
gkatt1 = ival
#endif
ival = i(gkdec5)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec6
#else
gkdec6 = ival
#endif
ival = i(gkdec4)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec5
#else
gkdec5 = ival
#endif
ival = i(gkdec3)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec4
#else
gkdec4 = ival
#endif
ival = i(gkdec2)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec3
#else
gkdec3 = ival
#endif
ival = i(gkdec1)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec2
#else
gkdec2 = ival
#endif
ival = i(gkdec6)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec1
#else
gkdec1 = ival
#endif
ival = i(gksus5)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihsus6
#else
gksus6 = ival
#endif
ival = i(gksus4)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihsus5
#else
gksus5 = ival
#endif
ival = i(gksus3)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihsus4
#else
gksus4 = ival
#endif
ival = i(gksus2)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihsus3
#else
gksus3 = ival
#endif
ival = i(gksus1)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihsus2
#else
gksus2 = ival
#endif
ival = i(gksus6)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihsus1
#else
gksus1 = ival
#endif
ival = i(gkrel5)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrel6
#else
gkrel6 = ival
#endif
ival = i(gkrel4)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrel5
#else
gkrel5 = ival
#endif
ival = i(gkrel3)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrel4
#else
gkrel4 = ival
#endif
ival = i(gkrel2)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrel3
#else
gkrel3 = ival
#endif
ival = i(gkrel1)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrel2
#else
gkrel2 = ival
#endif
ival = i(gkrel6)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrel1
#else
gkrel1 = ival
#endif


turnoff</instrumentText>
      </instrument>
    </instrumentAssignment>
    <instrumentAssignment arrangementId='9' isEnabled='true'>
      <instrument type='blue.orchestra.GenericInstrument'>
        <name>Switch -</name>
        <comment></comment>
        <globalOrc></globalOrc>
        <globalSco></globalSco>
        <instrumentText>ival = i(gklvl2)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihlvl1
#else
gklvl1 = ival
#endif
ival = i(gklvl3)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihlvl2
#else
gklvl2 = ival
#endif
ival = i(gklvl4)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihlvl3
#else
gklvl3 = ival
#endif
ival = i(gklvl5)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihlvl4
#else
gklvl4 = ival
#endif
ival = i(gklvl6)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihlvl5
#else
gklvl5 = ival
#endif
ival = i(gklvl1)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihlvl6
#else
gklvl6 = ival
#endif


ival = i(gkrat2)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrat1
#else
gkrat1 = ival
#endif
ival = i(gkrat3)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrat2
#else
gkrat2 = ival
#endif
ival = i(gkrat4)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrat3
#else
gkrat3 = ival
#endif
ival = i(gkrat5)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrat4
#else
gkrat4 = ival
#endif
ival = i(gkrat6)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrat5
#else
gkrat5 = ival
#endif
ival = i(gkrat1)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrat6
#else
gkrat6 = ival
#endif

ival = i(gkinv2)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihinv1
#else
gkinv1 = ival
#endif
ival = i(gkinv3)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihinv2
#else
gkinv2 = ival
#endif
ival = i(gkinv4)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihinv3
#else
gkinv3 = ival
#endif
ival = i(gkinv5)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihinv4
#else
gkinv4 = ival
#endif
ival = i(gkinv6)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihinv5
#else
gkinv5 = ival
#endif
ival = i(gkinv1)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihinv6
#else
gkinv6 = ival
#endif

ival = i(gkatt2)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt1
#else
gkatt1 = ival
#endif
ival = i(gkatt3)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt2
#else
gkatt2 = ival
#endif
ival = i(gkatt4)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt3
#else
gkatt3 = ival
#endif
ival = i(gkatt5)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt4
#else
gkatt4 = ival
#endif
ival = i(gkatt6)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt5
#else
gkatt5 = ival
#endif
ival = i(gkatt1)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihatt6
#else
gkatt6 = ival
#endif
ival = i(gkdec2)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec1
#else
gkdec1 = ival
#endif
ival = i(gkdec3)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec2
#else
gkdec2 = ival
#endif
ival = i(gkdec4)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec3
#else
gkdec3 = ival
#endif
ival = i(gkdec5)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec4
#else
gkdec4 = ival
#endif
ival = i(gkdec6)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec5
#else
gkdec5 = ival
#endif
ival = i(gkdec1)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihdec6
#else
gkdec6 = ival
#endif
ival = i(gksus2)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihsus1
#else
gksus1 = ival
#endif
ival = i(gksus3)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihsus2
#else
gksus2 = ival
#endif
ival = i(gksus4)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihsus3
#else
gksus3 = ival
#endif
ival = i(gksus5)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihsus4
#else
gksus4 = ival
#endif
ival = i(gksus6)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihsus5
#else
gksus5 = ival
#endif
ival = i(gksus1)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihsus6
#else
gksus6 = ival
#endif
ival = i(gkrel2)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrel1
#else
gkrel1 = ival
#endif
ival = i(gkrel3)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrel2
#else
gkrel2 = ival
#endif
ival = i(gkrel4)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrel3
#else
gkrel3 = ival
#endif
ival = i(gkrel5)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrel4
#else
gkrel4 = ival
#endif
ival = i(gkrel6)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrel5
#else
gkrel5 = ival
#endif
ival = i(gkrel1)
#ifdef ENABLEFL
FLsetVal_i 	ival, gihrel6
#else
gkrel6 = ival
#endif


turnoff</instrumentText>
      </instrument>
    </instrumentAssignment>
    <instrumentAssignment arrangementId='10' isEnabled='true'>
      <instrument type='blue.orchestra.GenericInstrument'>
        <name>Preset handling</name>
        <comment></comment>
        <globalOrc></globalOrc>
        <globalSco></globalSco>
        <instrumentText>ipreset = i(gkpreset)
istore = i(gkstore)
print istore
print ipreset


ialgo init 0
ifeedback init 0
iatt1 init 0
idec1 init 0
isus1 init 0
irel1 init 0
ilvl1 init 0
irat1 init 0
iatt2 init 0
idec2 init 0
isus2 init 0
irel2 init 0
ilvl2 init 0
irat2 init 0
iatt3 init 0
idec3 init 0
isus3 init 0
irel3 init 0
ilvl3 init 0
irat3 init 0
iatt4 init 0
idec4 init 0
isus4 init 0
irel4 init 0
ilvl4 init 0
irat4 init 0
iatt5 init 0
idec5 init 0
isus5 init 0
irel5 init 0
ilvl5 init 0
irat5 init 0
iatt6 init 0
idec6 init 0
isus6 init 0
irel6 init 0
ilvl6 init 0
irat6 init 0

iinv1 init 0
iinv2 init 0
iinv3 init 0
iinv4 init 0
iinv5 init 0
iinv6 init 0

if (istore==0) goto recall
event &quot;i&quot;, 11, 0, 0.1, ipreset
goto end
recall:
Sfilename sprintf &quot;Diffamator-%2i.preset&quot;, ipreset

ifile fiopen Sfilename, 1
fini ifile, 0, 1, ialgo, ifeedback, iatt1 , idec1, isus1, \
  irel1, ilvl1, irat1, iatt2, idec2, isus2, ilvl2, irat2, irel2, \
  iatt3, idec3, isus3, irel3, ilvl3, irat3, iatt4, idec4, isus4, \
  irel4, ilvl4, irat4, iatt5, idec5, isus5, irel5, ilvl5, irat5, \
  iatt6, idec6, isus6, irel6, ilvl6, irat6, iinv1, iinv2, iinv3, \
  iinv4, iinv5, iinv6

#ifdef ENABLEFL
FLsetVal_i 	ialgo, gihalgo
FLsetVal_i 	ifeedback, gihfeedback
FLsetVal_i 	iatt1, gihatt1
FLsetVal_i 	idec1, gihdec1
FLsetVal_i 	isus1, gihsus1
FLsetVal_i 	irel1, gihrel1
FLsetVal_i 	ilvl1, gihlvl1
FLsetVal_i 	irat1, gihrat1

FLsetVal_i 	iatt2, gihatt2
FLsetVal_i 	idec2, gihdec2
FLsetVal_i 	isus2, gihsus2
FLsetVal_i 	irel2, gihrel2
FLsetVal_i 	ilvl2, gihlvl2
FLsetVal_i 	irat2, gihrat2

FLsetVal_i 	iatt3, gihatt3
FLsetVal_i 	idec3, gihdec3
FLsetVal_i 	isus3, gihsus3
FLsetVal_i 	irel3, gihrel3
FLsetVal_i 	ilvl3, gihlvl3
FLsetVal_i 	irat3, gihrat3

FLsetVal_i 	iatt4, gihatt4
FLsetVal_i 	idec4, gihdec4
FLsetVal_i 	isus4, gihsus4
FLsetVal_i 	irel4, gihrel4
FLsetVal_i 	ilvl4, gihlvl4
FLsetVal_i 	irat4, gihrat4

FLsetVal_i 	iatt5, gihatt5
FLsetVal_i 	idec5, gihdec5
FLsetVal_i 	isus5, gihsus5
FLsetVal_i 	irel5, gihrel5
FLsetVal_i 	ilvl5, gihlvl5
FLsetVal_i 	irat5, gihrat5

FLsetVal_i 	iatt6, gihatt6
FLsetVal_i 	idec6, gihdec6
FLsetVal_i 	isus6, gihsus6
FLsetVal_i 	irel6, gihrel6
FLsetVal_i 	ilvl6, gihlvl6
FLsetVal_i 	irat6, gihrat6


FLsetVal_i 	iinv1, gihinv1
FLsetVal_i 	iinv2, gihinv2
FLsetVal_i 	iinv3, gihinv3
FLsetVal_i 	iinv4, gihinv4
FLsetVal_i 	iinv5, gihinv5
FLsetVal_i 	iinv6, gihinv6

#else
gkalgo init ialgo
gkfeedback init ifeedback
gkatt1 init iatt1
gkdec1 init idec1
gkdec1 init idec1
gkrel1 init irel1
gklvl1 init ilvl1
gkrat1 init irat1
gkinv1 init iinv1

gkatt2 init iatt2
gkdec2 init idec2
gkdec2 init idec2
gkrel2 init irel2
gklvl2 init ilvl2
gkrat2 init irat2
gkinv2 init iinv2

gkatt3 init iatt3
gkdec3 init idec3
gkdec3 init idec3
gkrel3 init irel3
gklvl3 init ilvl3
gkrat3 init irat3
gkinv3 init iinv3

gkatt4 init iatt4
gkdec4 init idec4
gkdec4 init idec4
gkrel4 init irel4
gklvl4 init ilvl4
gkrat4 init irat4
gkinv4 init iinv4

gkatt5 init iatt5
gkdec5 init idec5
gkdec5 init idec5
gkrel5 init irel5
gklvl5 init ilvl5
gkrat5 init irat5
gkinv5 init iinv5

gkatt6 init iatt6
gkdec6 init idec6
gkdec6 init idec6
gkrel6 init irel6
gklvl6 init ilvl6
gkrat6 init irat6
gkinv6 init iinv6
#endif

prints &quot;Recalled preset: %i\\n&quot;, ipreset
ficlose ifile

end:
turnoff</instrumentText>
      </instrument>
    </instrumentAssignment>
    <instrumentAssignment arrangementId='11' isEnabled='true'>
      <instrument type='blue.orchestra.GenericInstrument'>
        <name>Store preset</name>
        <comment></comment>
        <globalOrc></globalOrc>
        <globalSco></globalSco>
        <instrumentText>ipreset = p4
ialgo = i(gkalgo)
ifeedback = i(gkfeedback)
iatt1 = i(gkatt1)
idec1 = i(gkdec1)
isus1 = i(gksus1)
irel1 = i(gkrel1)
ilvl1 = i(gklvl1)
irat1 = i(gkrat1)
iinv1 = i(gkinv1)

iatt2 = i(gkatt2)
idec2 = i(gkdec2)
isus2 = i(gksus2)
irel2 = i(gkrel2)
ilvl2 = i(gklvl2)
irat2 = i(gkrat2)
iinv2 = i(gkinv2)

iatt3 = i(gkatt3)
idec3 = i(gkdec3)
isus3 = i(gksus3)
irel3 = i(gkrel3)
ilvl3 = i(gklvl3)
irat3 = i(gkrat3)
iinv3 = i(gkinv3)

iatt4 = i(gkatt4)
idec4 = i(gkdec4)
isus4 = i(gksus4)
irel4 = i(gkrel4)
ilvl4 = i(gklvl4)
irat4 = i(gkrat4)
iinv4 = i(gkinv4)

iatt5 = i(gkatt5)
idec5 = i(gkdec5)
isus5 = i(gksus5)
irel5 = i(gkrel5)
ilvl5 = i(gklvl5)
irat5 = i(gkrat5)
iinv5 = i(gkinv5)

iatt6 = i(gkatt6)
idec6 = i(gkdec6)
isus6 = i(gksus6)
irel6 = i(gkrel6)
ilvl6 = i(gklvl6)
irat6 = i(gkrat6)
iinv6 = i(gkinv6)

print ialgo
#ifdef ENABLEFL
FLsetVal_i 	0, gihstore
#else
gkstore init 0
#endif
Sfilename sprintf &quot;Diffamator-%2i.preset&quot;, ipreset
ifile fiopen Sfilename, 0
print ifile


fouti ifile, 0, 0, ialgo, ifeedback, iatt1, idec1, isus1, \
  irel1, ilvl1, irat1, iatt2, idec2, isus2, ilvl2, irat2, irel2, \
  iatt3, idec3, isus3, irel3, ilvl3, irat3, iatt4, idec4, isus4, \
  irel4, ilvl4, irat4, iatt5, idec5, isus5, irel5, ilvl5, irat5, \
  iatt6, idec6, isus6, irel6, ilvl6, irat6, iinv1, iinv2, iinv3, \
  iinv4, iinv5, iinv6

ficlose ifile

printf &quot;Stored preset :%i in file %s\n&quot;,1, ipreset, Sfilename

turnoff</instrumentText>
      </instrument>
    </instrumentAssignment>
    <instrumentAssignment arrangementId='12' isEnabled='true'>
      <instrument type='blue.orchestra.GenericInstrument'>
        <name>Keyboard input</name>
        <comment></comment>
        <globalOrc></globalOrc>
        <globalSco></globalSco>
        <instrumentText>kres sensekey
;printk2 kres
if (kres==113) then ;q
event &quot;i&quot;, 3, 0, 0.1 ;Randomize Mus
		
elseif (kres==119) then ;w
event &quot;i&quot;, 2, 0, 0.1 ;Randomize FX

elseif (kres==101) then ;e
event &quot;i&quot;, 6, 0, 0.1 ;Attackify

elseif (kres==114) then ;r
event &quot;i&quot;, 7, 0, 0.1 ;Padify

elseif (kres==116) then ;t
event &quot;i&quot;, 4, 0, 0.1 ;+ harm

elseif (kres==121) then ;y
event &quot;i&quot;, 5, 0, 0.1 ;- harm

elseif (kres==117) then ;u
event &quot;i&quot;, 8, 0, 0.1 ;switch +
elseif (kres==105) then ;i
event &quot;i&quot;, 9, 0, 0.1 ;switch -

elseif (kres==111) then ;o 
kalgo = gkalgo-1 ;algorithm -1
kalgo wrap kalgo, 0, 32
#ifdef ENABLEFL
FLsetVal 	1,kalgo, gihalgo
#else
gkalgo = kalgo
#endif

elseif (kres==112) then ;p
kalgo = gkalgo+1 ;algorithm +1
kalgo wrap kalgo, 0, 32
#ifdef ENABLEFL
FLsetVal 	1,kalgo, gihalgo
#else
gkalgo = kalgo
#endif

elseif (kres==97) then ;a
event &quot;i&quot;, 17, 0, 0.1 ;Print iline
endif

</instrumentText>
      </instrument>
    </instrumentAssignment>
    <instrumentAssignment arrangementId='13' isEnabled='true'>
      <instrument type='blue.orchestra.GenericInstrument'>
        <name>Show help</name>
        <comment></comment>
        <globalOrc></globalOrc>
        <globalSco></globalSco>
        <instrumentText>
#ifdef ENABLEFL
FLshow	gihhelp
FLshow gihhelp1
FLshow gihhelp2
FLshow gihhelp3
FLshow gihhelp4
FLshow gihhelp5
FLshow gihhelp6
FLshow gihhelp7
FLshow gihhelp8
FLshow gihhelp9
FLshow gihhelp10
FLshow	gihhelphide
#endif
turnoff</instrumentText>
      </instrument>
    </instrumentAssignment>
    <instrumentAssignment arrangementId='14' isEnabled='true'>
      <instrument type='blue.orchestra.GenericInstrument'>
        <name>Hide Help</name>
        <comment></comment>
        <globalOrc></globalOrc>
        <globalSco></globalSco>
        <instrumentText>
#ifdef ENABLEFL
FLhide	gihhelp
FLhide gihhelp1
FLhide gihhelp2
FLhide gihhelp3
FLhide gihhelp4
FLhide gihhelp5
FLhide gihhelp6
FLhide gihhelp7
FLhide gihhelp8
FLhide gihhelp9
FLhide gihhelp10
FLhide	gihhelphide
#endif

turnoff</instrumentText>
      </instrument>
    </instrumentAssignment>
    <instrumentAssignment arrangementId='16' isEnabled='true'>
      <instrument type='blue.orchestra.GenericInstrument'>
        <name>Terminate</name>
        <comment></comment>
        <globalOrc></globalOrc>
        <globalSco></globalSco>
        <instrumentText>exitnow</instrumentText>
      </instrument>
    </instrumentAssignment>
    <instrumentAssignment arrangementId='17' isEnabled='true'>
      <instrument type='blue.orchestra.GenericInstrument'>
        <name>Print i line</name>
        <comment></comment>
        <globalOrc></globalOrc>
        <globalSco></globalSco>
        <instrumentText>ialgo = i(gkalgo)
ifeedback = i(gkfeedback)
iatt1 = -i(gkatt1)
idec1 = -i(gkdec1)
isus1 = -i(gksus1)
irel1 = -i(gkrel1)
ilvl1 = -i(gklvl1)
irat1 = i(gkrat1)
iinv1 = i(gkinv1)

iatt2 = -i(gkatt2)
idec2 = -i(gkdec2)
isus2 = -i(gksus2)
irel2 = -i(gkrel2)
ilvl2 = -i(gklvl2)
irat2 = i(gkrat2)
iinv2 = i(gkinv2)

iatt3 = -i(gkatt3)
idec3 = -i(gkdec3)
isus3 = -i(gksus3)
irel3 = -i(gkrel3)
ilvl3 = -i(gklvl3)
irat3 = i(gkrat3)
iinv3 = i(gkinv3)

iatt4 = -i(gkatt4)
idec4 = -i(gkdec4)
isus4 = -i(gksus4)
irel4 = -i(gkrel4)
ilvl4 = -i(gklvl4)
irat4 = i(gkrat4)
iinv4 = i(gkinv4)

iatt5 = -i(gkatt5)
idec5 = -i(gkdec5)
isus5 = -i(gksus5)
irel5 = -i(gkrel5)
ilvl5 = -i(gklvl5)
irat5 = i(gkrat5)
iinv5 = i(gkinv5)

iatt6 = -i(gkatt6)
idec6 = -i(gkdec6)
isus6 = -i(gksus6)
irel6 = -i(gkrel6)
ilvl6 = -i(gklvl6)
irat6 = i(gkrat6)
iinv6 = i(gkinv6)
#ifdef ENABLEFL
ifreq = i(gkprintfreq)
iveloc = i(gkprintveloc)
idur = i(gkprintdur)
#else
ifreq = 440
iveloc = 100
idur = 3
#endif

prints &quot;i 1  0  %f  %f %i %i %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %i %i %i %i %i %i \n&quot;,\
  idur, ifreq, iveloc, ialgo, ifeedback, iatt1, idec1, isus1 , \
  irel1, irat1 ,ilvl1, iatt2, idec2, isus2, irel2, irat2, ilvl2, \
  iatt3, idec3, isus3, irel3, irat3, ilvl3, iatt4, idec4, isus4, \
  irel4, irat4, ilvl4, iatt5, idec5, isus5, irel5, irat5, ilvl5, \
  iatt6, idec6, isus6, irel6, irat6, ilvl6, iinv1, iinv2, iinv3, \
  iinv4, iinv5, iinv6
</instrumentText>
      </instrument>
    </instrumentAssignment>
  </arrangement>
  <mixer>
    <enabled>false</enabled>
    <extraRenderTime>0.0</extraRenderTime>
    <channelList list='channels'>
      <channel>
        <name>1</name>
        <outChannel>Master</outChannel>
        <level>0.0</level>
        <muted>false</muted>
        <solo>false</solo>
        <effectsChain bin='pre'/>
        <effectsChain bin='post'/>
      </channel>
      <channel>
        <name>2</name>
        <outChannel>Master</outChannel>
        <level>0.0</level>
        <muted>false</muted>
        <solo>false</solo>
        <effectsChain bin='pre'/>
        <effectsChain bin='post'/>
      </channel>
      <channel>
        <name>3</name>
        <outChannel>Master</outChannel>
        <level>0.0</level>
        <muted>false</muted>
        <solo>false</solo>
        <effectsChain bin='pre'/>
        <effectsChain bin='post'/>
      </channel>
      <channel>
        <name>4</name>
        <outChannel>Master</outChannel>
        <level>0.0</level>
        <muted>false</muted>
        <solo>false</solo>
        <effectsChain bin='pre'/>
        <effectsChain bin='post'/>
      </channel>
      <channel>
        <name>5</name>
        <outChannel>Master</outChannel>
        <level>0.0</level>
        <muted>false</muted>
        <solo>false</solo>
        <effectsChain bin='pre'/>
        <effectsChain bin='post'/>
      </channel>
      <channel>
        <name>6</name>
        <outChannel>Master</outChannel>
        <level>0.0</level>
        <muted>false</muted>
        <solo>false</solo>
        <effectsChain bin='pre'/>
        <effectsChain bin='post'/>
      </channel>
      <channel>
        <name>7</name>
        <outChannel>Master</outChannel>
        <level>0.0</level>
        <muted>false</muted>
        <solo>false</solo>
        <effectsChain bin='pre'/>
        <effectsChain bin='post'/>
      </channel>
      <channel>
        <name>8</name>
        <outChannel>Master</outChannel>
        <level>0.0</level>
        <muted>false</muted>
        <solo>false</solo>
        <effectsChain bin='pre'/>
        <effectsChain bin='post'/>
      </channel>
      <channel>
        <name>9</name>
        <outChannel>Master</outChannel>
        <level>0.0</level>
        <muted>false</muted>
        <solo>false</solo>
        <effectsChain bin='pre'/>
        <effectsChain bin='post'/>
      </channel>
      <channel>
        <name>10</name>
        <outChannel>Master</outChannel>
        <level>0.0</level>
        <muted>false</muted>
        <solo>false</solo>
        <effectsChain bin='pre'/>
        <effectsChain bin='post'/>
      </channel>
      <channel>
        <name>11</name>
        <outChannel>Master</outChannel>
        <level>0.0</level>
        <muted>false</muted>
        <solo>false</solo>
        <effectsChain bin='pre'/>
        <effectsChain bin='post'/>
      </channel>
      <channel>
        <name>12</name>
        <outChannel>Master</outChannel>
        <level>0.0</level>
        <muted>false</muted>
        <solo>false</solo>
        <effectsChain bin='pre'/>
        <effectsChain bin='post'/>
      </channel>
      <channel>
        <name>13</name>
        <outChannel>Master</outChannel>
        <level>0.0</level>
        <muted>false</muted>
        <solo>false</solo>
        <effectsChain bin='pre'/>
        <effectsChain bin='post'/>
      </channel>
      <channel>
        <name>14</name>
        <outChannel>Master</outChannel>
        <level>0.0</level>
        <muted>false</muted>
        <solo>false</solo>
        <effectsChain bin='pre'/>
        <effectsChain bin='post'/>
      </channel>
      <channel>
        <name>16</name>
        <outChannel>Master</outChannel>
        <level>0.0</level>
        <muted>false</muted>
        <solo>false</solo>
        <effectsChain bin='pre'/>
        <effectsChain bin='post'/>
      </channel>
      <channel>
        <name>17</name>
        <outChannel>Master</outChannel>
        <level>0.0</level>
        <muted>false</muted>
        <solo>false</solo>
        <effectsChain bin='pre'/>
        <effectsChain bin='post'/>
      </channel>
    </channelList>
    <channelList list='subChannels'/>
    <channel>
      <name>Master</name>
      <outChannel>Master</outChannel>
      <level>0.0</level>
      <muted>false</muted>
      <solo>false</solo>
      <effectsChain bin='pre'/>
      <effectsChain bin='post'/>
    </channel>
  </mixer>
  <tables></tables>
  <soundObjectLibrary/>
  <globalOrcSco>
    <globalOrc>; undefine ENABLEFL to 0 if you don&apos;t want fltk or want to capture keyboard events
; from stdin instead of the fltk window

#define ENABLEFL ##
maxalloc 1, 16 ;Adjust maxalloc according to your system

#ifdef ENABLEFL
FLpanel	&quot;Diffamator&quot;, 400, 640, -1, -1 , 4, 1

FLcolor	248, 242, 210
imainbox	FLbox	&quot;&quot;, 1, 0, 0, 400, 640, 0, 0

ix = 5
iy = 20
FLcolor 219, 203, 161
FLcolor2 102,52,0
FLgroup	&quot;OP1&quot;, 90, 85, ix, iy, 4
gkatt1, gihatt1	FLslider	&quot;A&quot;, -1, 0, 0, 6, -1, 10, 60, ix+10, iy+5
gkdec1, gihdec1	FLslider	&quot;D&quot;, -0.5, 0, 0, 6, -1, 10, 60, ix+30, iy+5
gksus1, gihsus1	FLslider	&quot;S&quot;, -1, 0, 0, 6, -1, 10, 60, ix+50, iy+5
gkrel1, gihrel1	FLslider	&quot;R&quot;, -3, 0, 0, 6, -1, 10, 60, ix+70, iy+5
FLgroupEnd
FLgroup	&quot;&quot;, 90, 85, ix+95, iy, 4
gklvl1, gihlvl1	FLslider	&quot;Lev&quot;, -1, 0, 0, 6, -1, 10, 60, ix+105, iy+5
FLcolor 255,255,255
gkrat1, gihrat1	FLtext	&quot;Ratio&quot;, 0, 6, 0.001, 1, 40, 20, ix+130, iy+5
FLcolor 251, 255, 0
FLcolor2 255,0,0
gkinv1, gihinv1 FLbutton &quot;Inv&quot;, 1, 0, 2, 40, 20, ix+130, iy+45, -1
FLgroupEnd

FLcolor 219, 203, 161
FLcolor2 102,52,0
ix = 5
iy = 125
FLgroup	&quot;OP2&quot;, 90, 85, ix, iy, 4
gkatt2, gihatt2	FLslider	&quot;A&quot;, -1, 0, 0, 6, -1, 10, 60, ix+10, iy+5
gkdec2, gihdec2	FLslider	&quot;D&quot;, -0.5, 0, 0, 6, -1, 10, 60, ix+30, iy+5
gksus2, gihsus2	FLslider	&quot;S&quot;, -1, 0, 0, 6, -1, 10, 60, ix+50, iy+5
gkrel2, gihrel2	FLslider	&quot;R&quot;, -3, 0, 0, 6, -1, 10, 60, ix+70, iy+5
FLgroupEnd
FLgroup	&quot;&quot;, 90, 85, ix+95, iy, 4
gklvl2, gihlvl2	FLslider	&quot;Lev&quot;, -1, 0, 0, 6, -1, 10, 60, ix+105, iy+5
FLcolor 255,255,255
gkrat2, gihrat2	FLtext	&quot;Ratio&quot;, 0, 6, 0.001, 1, 40, 20, ix+130, iy+5
FLcolor 251, 255, 0
FLcolor2 255,0,0
gkinv2, gihinv2 FLbutton &quot;Inv&quot;, 1, 0, 2, 40, 20, ix+130, iy+45, -1
FLgroupEnd

FLcolor 219, 203, 161
FLcolor2 102,52,0
ix = 5
iy = 230
FLgroup	&quot;OP3&quot;, 90, 85, ix, iy, 4
gkatt3, gihatt3	FLslider	&quot;A&quot;, -1, 0, 0, 6, -1, 10, 60, ix+10, iy+5
gkdec3, gihdec3	FLslider	&quot;D&quot;, -0.5, 0, 0, 6, -1, 10, 60, ix+30, iy+5
gksus3, gihsus3	FLslider	&quot;S&quot;, -1, 0, 0, 6, -1, 10, 60, ix+50, iy+5
gkrel3, gihrel3	FLslider	&quot;R&quot;, -3, 0, 0, 6, -1, 10, 60, ix+70, iy+5
FLgroupEnd
FLgroup	&quot;&quot;, 90, 85, ix+95, iy, 4
gklvl3, gihlvl3	FLslider	&quot;Lev&quot;, -1, 0, 0, 6, -1, 10, 60, ix+105, iy+5
FLcolor 255,255,255
gkrat3, gihrat3	FLtext	&quot;Ratio&quot;, 0, 6, 0.001, 1, 40, 20, ix+130, iy+5
FLcolor 251, 255, 0
FLcolor2 255,0,0
gkinv3, gihinv3 FLbutton &quot;Inv&quot;, 1, 0, 2, 40, 20, ix+130, iy+45, -1
FLgroupEnd

FLcolor 219, 203, 161
FLcolor2 102,52,0
ix = 5
iy = 335
FLgroup	&quot;OP4&quot;, 90, 85, ix, iy, 4
gkatt4, gihatt4	FLslider	&quot;A&quot;, -1, 0, 0, 6, -1, 10, 60, ix+10, iy+5
gkdec4, gihdec4	FLslider	&quot;D&quot;, -0.5, 0, 0, 6, -1, 10, 60, ix+30, iy+5
gksus4, gihsus4	FLslider	&quot;S&quot;, -1, 0, 0, 6, -1, 10, 60, ix+50, iy+5
gkrel4, gihrel4	FLslider	&quot;R&quot;, -3, 0, 0, 6, -1, 10, 60, ix+70, iy+5
FLgroupEnd
FLgroup	&quot;&quot;, 90, 85, ix+95, iy, 4
gklvl4, gihlvl4	FLslider	&quot;Lev&quot;, -1, 0, 0, 6, -1, 10, 60, ix+105, iy+5
FLcolor 255,255,255
gkrat4, gihrat4	FLtext	&quot;Ratio&quot;, 0, 6, 0.001, 1, 40, 20, ix+130, iy+5
FLcolor 251, 255, 0
FLcolor2 255,0,0
gkinv4, gihinv4 FLbutton &quot;Inv&quot;, 1, 0, 2, 40, 20, ix+130, iy+45, -1
FLgroupEnd

FLcolor 219, 203, 161
FLcolor2 102,52,0
ix = 5
iy = 440
FLgroup	&quot;OP5&quot;, 90, 85, ix, iy, 4
gkatt5, gihatt5	FLslider	&quot;A&quot;, -1, 0, 0, 6, -1, 10, 60, ix+10, iy+5
gkdec5, gihdec5	FLslider	&quot;D&quot;, -0.5, 0, 0, 6, -1, 10, 60, ix+30, iy+5
gksus5, gihsus5	FLslider	&quot;S&quot;, -1, 0, 0, 6, -1, 10, 60, ix+50, iy+5
gkrel5, gihrel5	FLslider	&quot;R&quot;, -3, 0, 0, 6, -1, 10, 60, ix+70, iy+5
FLgroupEnd
FLgroup	&quot;&quot;, 90, 85, ix+95, iy, 4
gklvl5, gihlvl5	FLslider	&quot;Lev&quot;, -1, 0, 0, 6, -1, 10, 60, ix+105, iy+5
FLcolor 255,255,255
gkrat5, gihrat5	FLtext	&quot;Ratio&quot;, 0, 6, 0.001, 1, 40, 20, ix+130, iy+5
FLcolor 251, 255, 0
FLcolor2 255,0,0
gkinv5, gihinv5 FLbutton &quot;Inv&quot;, 1, 0, 2, 40, 20, ix+130, iy+45, -1
FLgroupEnd

FLcolor 219, 203, 161
FLcolor2 102,52,0
ix = 5
iy = 545
FLgroup	&quot;OP6&quot;, 90, 85, ix, iy, 4
gkatt6, gihatt6	FLslider	&quot;A&quot;, -1, 0, 0, 6, -1, 10, 60, ix+10, iy+5
gkdec6, gihdec6	FLslider	&quot;D&quot;, -0.5, 0, 0, 6, -1, 10, 60, ix+30, iy+5
gksus6, gihsus6	FLslider	&quot;S&quot;, -1, 0, 0, 6, -1, 10, 60, ix+50, iy+5
gkrel6, gihrel6	FLslider	&quot;R&quot;, -3, 0, 0, 6, -1, 10, 60, ix+70, iy+5
FLgroupEnd
FLgroup	&quot;&quot;, 90, 85, ix+95, iy, 4
gklvl6, gihlvl6	FLslider	&quot;Lev&quot;, -1, 0, 0, 6, -1, 10, 60, ix+105, iy+5
FLcolor 255,255,255
gkrat6, gihrat6	FLtext	&quot;Ratio&quot;, 0, 6, 0.001, 1, 40, 20, ix+130, iy+5
FLcolor 251, 255, 0
FLcolor2 255,0,0
gkinv6, gihinv6 FLbutton &quot;Inv&quot;, 1, 0, 2, 40, 20, ix+130, iy+45, -1
FLgroupEnd



FLcolor 240, 241, 190
FLcolor2 102,52,0
ix = 200
iy = 160
FLgroup	&quot;Transform&quot;, 90, 215, ix, iy, 4
FLcolor 251, 255, 150
FLcolor2 102,52,0
gkrandomm, gihrandomm FLbutton &quot;Rand Mus&quot;, 1, 0, 1, 80, 20, ix+5, iy+10, 0, 3, 0, 1
FLcolor 240, 235, 102
FLcolor2 102,52,0
gkrandomf, gihrandomf FLbutton &quot;Rand FX&quot;, 1, 0, 1, 80, 20, ix+5, iy+35, 0, 2, 0, 1
FLcolor 251, 217, 3
FLcolor2 102,52,0
gkmattack, gihmattack FLbutton &quot;Attackify&quot;, 1, 0, 1, 80, 20, ix+5, iy+60, 0, 6, 0, 1
gkpadify, gipadify FLbutton &quot;Padify&quot;, 1, 0, 1, 80, 20, ix+5, iy+85, 0, 7, 0, 1
FLcolor 240, 179, 4
FLcolor2 102,52,0
gkmharm, gihmharm FLbutton &quot;+ Harm&quot;, 1, 0, 1, 80, 20, ix+5, iy+110, 0, 4, 0, 1
gklharm, gihlharm FLbutton &quot;- Harm&quot;, 1, 0, 1, 80, 20, ix+5, iy+135, 0, 5, 0, 1
FLcolor 195, 88, 0
FLcolor2 102,52,0
gkswitchm, gihswitchm FLbutton &quot;Switch +&quot;, 1, 0, 1, 80, 20, ix+5, iy+160, 0, 8, 0, 1
gkswitchl, gihswitchl FLbutton &quot;Switch -&quot;, 1, 0, 1, 80, 20, ix+5, iy+185, 0, 9, 0, 1
FLgroupEnd

FLcolor 182,68,11
FLcolor2 102,52,0
ix = 200
iy = 400
FLgroup &quot;Presets&quot;, 190, 230, ix, iy, 4

FLcolor 195,166,0
FLcolor2 102,52,0
gkpreset,gihpreset  FLbutBank  12, 5, 6, 180, 120, ix+5, iy+5, 0, 10, 0, 1
FLcolor 182,118,11
FLcolor2 102,52,0
gkstore, gihstore FLbutton &quot;Store&quot;, 1, 0, 2, 80, 20, ix+5, iy+130, -1

gkprintfreq, gihprintfreq	FLtext	&quot;i frq&quot;, 20, 3000, 0.1, 1, 80, 20, ix+5, iy+165
gkprintveloc, gihprintveloc	FLtext	&quot;i Veloc&quot;, 1, 127, 1, 1, 45, 20, ix+90, iy+165
gkprintdur, gihprintdur	FLtext	&quot;i Dur&quot;, 0, 5, 0.1, 1, 45, 20, ix+140, iy+165
gkprint, gihprint FLbutton &quot;i Print&quot;, 1, 0, 1, 180, 20, ix+5, iy+205, 0, 17, 0, 1

FLgroupEnd

FLcolor 254, 147, 0
FLcolor2 102,52,0
ix = 300
iy = 160
FLgroup	&quot;&quot;, 90, 215, ix, iy, 4
gkfeedback, gihfeedback	FLslider &quot;Feedback&quot;, 0, 1, 0, 1, -1, 80, 20, ix+5, iy+65
gkalgo, gihalgo	FLcount	&quot;Algorithm&quot;, 1, 32, 1, 4, 4, 80, 20, ix+5, iy+105, -1
gkalglock, gihalglock	FLbutton	&quot;Lock&quot;, 1, 0, 3, 60, 20, ix+15, iy+145, -1

FLcolor 251, 219, 115
FLcolor2 102,52,0
gkshowhelp, gihshowhelp FLbutton &quot;About&quot;, 1, 0, 1, 80, 20, ix+5, iy+190, 0, 13, 0, 13, 1
FLgroupEnd

FLcolor 255,0,0
FLcolor2 102,52,0
kkill, ikill	FLbutton	&quot;                                     @circle&quot;, 1, 0, 1, 190, 10, 200, 20, 0, 16, 0, 1
gihtitle	FLbox	&quot;Diffamator&quot;, 13, 5, 20, 190, 40 , 200, 50

FLcolor 219, 203, 161
FLcolor2 102,52,0
gihhelp	FLbox	&quot;&quot;, 13, 5, 8, 370, 590, 15, 15
gihhelp1	FLbox	&quot;Diffamator \nVersion 0.9\nJune 2006\nA randomizable FM synthesizer for csound 5.\nby Andres Cabrera (GUI by my wife Cristina =) )\nReleased under the GPL license. Consult the file README.txt.\n&quot;, 13, 5, 12, 370, 120, 15, 15
gihhelp2	FLbox	&quot;Rand Mus- Randomizes all Operator parameters, \nalgorithm and feedback but keeping ratios in 0.5 multiple \nratios, which tend to generate harmonic spectra\n&quot;, 13, 5, 10, 370, 50, 15, 135
gihhelp3	FLbox	&quot;Rand FX- Exactly as before, but ratios are completely \nrandomized, generating mostly noisy and in-harmonic spectra&quot;, 13, 5, 10, 370, 50, 15, 185
gihhelp4	FLbox	&quot;Attackify- Shortens the attack and decay times, \nand decreases sustain level to all operators, \neffectively making the sound more percussive.&quot;, 13, 5, 10, 370, 50, 15, 235
gihhelp5	FLbox	&quot;Padify- Lengthens the attack and decay times to smooth \nthe onset of the sound&quot;, 13, 5, 10, 370, 50, 15, 285
gihhelp6	FLbox	&quot;+ Harm- Moves the frequency ratios toward multiples of 0.5,\n making the sound tend to a more harmonic spectrum&quot;, 13, 5, 10, 370, 50, 15, 335
gihhelp7	FLbox	&quot;- Harm- Slightly randomizes the frequency ratios, slowly \nturning a harmonic sound into an in-harmonic one.\n&quot;, 13, 5, 10, 370, 50, 15, 385
gihhelp8	FLbox	&quot;Switch + - Switches Operator parameters one operator down\n&quot;, 13, 5, 10, 370, 50, 15, 435
gihhelp9	FLbox	&quot;Switch - - Switches Operator parameters one operator up\n&quot;, 13, 5, 10, 370, 50, 15, 485
gihhelp10	FLbox	&quot;i Print - Prints a score line for the current instrument with selectable duration, frequency and velocity\n&quot;, 13, 5, 10, 370, 50, 15, 535
gkhelphide, gihhelphide	FLbutton	&quot;Close&quot;, 1, 0, 1, 40, 15, 340, 585, 0, 14, 0, 1

FLpanelEnd

FLrun
/*
FLsetVal_i 	-1, gihlvl1
FLsetVal_i 	-1, gihlvl2
FLsetVal_i 	-1, gihlvl3
FLsetVal_i 	-1, gihlvl4
FLsetVal_i 	-1, gihlvl5
FLsetVal_i 	-1, gihlvl6

FLsetVal_i 	1, gihrat1
FLsetVal_i 	2, gihrat2
FLsetVal_i 	0.5, gihrat3
FLsetVal_i 	1, gihrat4
FLsetVal_i 	2, gihrat5
FLsetVal_i 	0.5, gihrat6

FLsetVal_i 	-1, gihatt1
FLsetVal_i 	-1, gihatt2
FLsetVal_i 	-1, gihatt3
FLsetVal_i 	-1, gihatt4
FLsetVal_i 	-1, gihatt5
FLsetVal_i 	-1, gihatt6
FLsetVal_i 	-1, gihdec1
FLsetVal_i 	-1, gihdec2
FLsetVal_i 	-1, gihdec3
FLsetVal_i 	-1, gihdec4
FLsetVal_i 	-1, gihdec5
FLsetVal_i 	-1, gihdec6
FLsetVal_i 	-1, gihsus1
FLsetVal_i 	-1, gihsus2
FLsetVal_i 	-1, gihsus3
FLsetVal_i 	-1, gihsus4
FLsetVal_i 	-1, gihsus5
FLsetVal_i 	-1, gihsus6
FLsetVal_i 	-1, gihrel1
FLsetVal_i 	-1, gihrel2
FLsetVal_i 	-1, gihrel3
FLsetVal_i 	-1, gihrel4
FLsetVal_i 	-1, gihrel5
FLsetVal_i 	-1, gihrel6


FLsetVal_i	0, gihalgo
FLsetVal_i	0, gihfeedback*/

FLsetVal_i 440, gihprintfreq
FLsetVal_i 100, gihprintveloc
FLsetVal_i 3, gihprintdur

FLhide gihhelp
FLhide gihhelp1
FLhide gihhelp2
FLhide gihhelp3
FLhide gihhelp4
FLhide gihhelp5
FLhide gihhelp6
FLhide gihhelp7
FLhide gihhelp8
FLhide gihhelp9
FLhide gihhelp10
FLhide gihhelphide


#else

gkalgo init 1
gkfeedback init 0
gkalglock init 0
gkpreset init 0
gkstore init 0

gkatt1 init 0
gihatt1 init 0
gkdec1 init 0
gihdec1 init 0
gksus1 init 0
gihsus1 init 0
gkrel1 init 0
gihrel1 init 0
gklvl1 init 0
gihlvl1 init 0
gkrat1 init 0
gihrat1 init 0
gkinv1 init 0
gihinv1 init 0
gkatt2 init 0
gihatt2 init 0
gkdec2 init 0
gihdec2 init 0
gksus2 init 0
gihsus2 init 0
gkrel2 init 0
gihrel2 init 0
gklvl2 init 0
gihlvl2 init 0
gkrat2 init 0
gihrat2 init 0
gkinv2 init 0
gihinv2 init 0
gkatt3 init 0
gihatt3 init 0
gkdec3 init 0
gihdec3 init 0
gksus3 init 0
gihsus3 init 0
gkrel3 init 0
gihrel3 init 0
gklvl3 init 0
gihlvl3 init 0
gkrat3 init 0
gihrat3 init 0
gkinv3 init 0
gihinv3 init 0
gkatt4 init 0
gihatt4 init 0
gkdec4 init 0
gihdec4 init 0
gksus4 init 0
gihsus4 init 0
gkrel4 init 0
gihrel4 init 0
gklvl4 init 0
gihlvl4 init 0
gkrat4 init 0
gihrat4 init 0
gkinv4 init 0
gihinv4 init 0
gkatt5 init 0
gihatt5 init 0
gkdec5 init 0
gihdec5 init 0
gksus5 init 0
gihsus5 init 0
gkrel5 init 0
gihrel5 init 0
gklvl5 init 0
gihlvl5 init 0
gkrat5 init 0
gihrat5 init 0
gkinv5 init 0
gihinv5 init 0
gkatt6 init 0
gihatt6 init 0
gkdec6 init 0
gihdec6 init 0
gksus6 init 0
gihsus6 init 0
gkrel6 init 0
gihrel6 init 0
gklvl6 init 0
gihlvl6 init 0
gkrat6 init 0
gihrat6 init 0
gkinv6 init 0
gihinv6 init 0
#endif

gafeedback init 0
gisine ftgen 0,0, 4096, 10, 1
seed 0

turnon 12</globalOrc>
    <globalSco>f 0 3000
i 10 0 1
</globalSco>
  </globalOrcSco>
  <opcodeList/>
  <liveData>
    <commandLine>csound -Wdo devaudio -L stdin</commandLine>
  </liveData>
  <soundObject type='blue.soundObject.PolyObject'>
    <subjectiveDuration>2.0</subjectiveDuration>
    <startTime>0.0</startTime>
    <name>root</name>
    <backgroundColor>-10066279</backgroundColor>
    <timeBehavior>0</timeBehavior>
    <noteProcessorChain/>
    <isRoot>true</isRoot>
    <pixelSecond>64</pixelSecond>
    <heightIndex>2</heightIndex>
    <snapEnabled>false</snapEnabled>
    <snapValue>1.0</snapValue>
    <timeDisplay>0</timeDisplay>
    <timeUnit>5</timeUnit>
    <soundLayer name='' muted='false' solo='false'>
      <noteProcessorChain/>
    </soundLayer>
  </soundObject>
  <scratchPadData>
    <isWordWrapEnabled>true</isWordWrapEnabled>
    <scratchText/>
  </scratchPadData>
  <noteProcessorChainMap/>
  <renderStartTime>0.0</renderStartTime>
  <renderEndTime>-1.0</renderEndTime>
  <markersList/>
  <loopRendering>false</loopRendering>
</blueData>