;
; ""
; by Steven Yi
;
; 
;
; Generated by blue 0.114.1 (http://csounds.com/stevenyi/blue/index.html)
;

<CsoundSynthesizer>

<CsOptions>
csound -odac3
</CsOptions>
<CsInstruments>
sr=44100
ksmps=1
nchnls=2



ga_bluemix_1_0	init	0
ga_bluemix_1_1	init	0
ga_bluemix_2_0	init	0
ga_bluemix_2_1	init	0
ga_bluemix_3_0	init	0
ga_bluemix_3_1	init	0
ga_bluemix_4_0	init	0
ga_bluemix_4_1	init	0
ga_bluemix_5_0	init	0
ga_bluemix_5_1	init	0
ga_bluesub_Master_0	init	0
ga_bluesub_Master_1	init	0



gi_fof_soprano_freq ftgen 0, 0, 32, -2 ,800 ,1150 ,2900 ,3900 ,4950 ,350 ,2000 ,2800 ,3600 ,4950 ,270 ,2140 ,2950 ,3900 ,4950 ,450 ,800 ,2830 ,3800 ,4950 ,325 ,700 ,2700 ,3800 ,4950
gi_fof_soprano_amp ftgen 0, 0, 32, -2 ,0 ,-6 ,-32 ,-20 ,-50 ,0 ,-20 ,-15 ,-40 ,-56 ,0 ,-12 ,-26 ,-26 ,-44 ,0 ,-11 ,-22 ,-22 ,-50 ,0 ,-16 ,-35 ,-40 ,-60
gi_fof_soprano_bw ftgen 0, 0, 32, -2 ,80 ,90 ,120 ,130 ,140 ,60 ,100 ,120 ,150 ,200 ,60 ,90 ,100 ,120 ,120 ,40 ,80 ,100 ,120 ,120 ,50 ,60 ,170 ,180 ,200

gi_sine	ftgen 0, 0, 65537, 10, 1

gi_fof 	ftgen 0, 0, 1024, 19, .5, .5, 270, .5

gi_fof_countertenor_freq ftgen 0, 0, 32, -2 ,660 ,1120 ,2750 ,3000 ,3350 ,440 ,1800 ,2700 ,3000 ,3300 ,270 ,1850 ,2900 ,3350 ,3590 ,430 ,820 ,2700 ,3000 ,3300 ,370 ,630 ,2750 ,3000 ,3400
gi_fof_countertenor_amp ftgen 0, 0, 32, -2 ,0 ,-6 ,-23 ,-24 ,-38 ,0 ,-14 ,-18 ,-20 ,-20 ,0 ,-24 ,-24 ,-36 ,-36 ,0 ,-12 ,-26 ,-22 ,-34 ,0 ,-20 ,-23 ,-30 ,-34
gi_fof_countertenor_bw ftgen 0, 0, 32, -2 ,80 ,90 ,120 ,130 ,140 ,70 ,80 ,100 ,120 ,120 ,40 ,90 ,100 ,120 ,120 ,40 ,80 ,100 ,120 ,120 ,40 ,60 ,100 ,120 ,120

gi_fof_alto_freq ftgen 0, 0, 32, -2 ,800 ,1150 ,2800 ,3500 ,4950 ,400 ,1600 ,2700 ,3300 ,4950 ,350 ,1700 ,2700 ,3700 ,4950 ,450 ,800 ,2830 ,3500 ,4950 ,325 ,700 ,2530 ,3500 ,4950
gi_fof_alto_amp ftgen 0, 0, 32, -2 ,0 ,-4 ,-20 ,-36 ,-60 ,0 ,-24 ,-30 ,-35 ,-60 ,0 ,-20 ,-30 ,-36 ,-60 ,0 ,-9 ,-16 ,-29 ,-55 ,0 ,-12 ,-30 ,-40 ,-64
gi_fof_alto_bw ftgen 0, 0, 32, -2 ,80 ,90 ,120 ,130 ,140 ,60 ,80 ,120 ,150 ,200 ,50 ,100 ,120 ,150 ,200 ,70 ,80 ,100 ,130 ,135 ,50 ,60 ,170 ,180 ,200

gi_fof_tenor_freq ftgen 0, 0, 32, -2 ,650 ,1080 ,2650 ,2900 ,3250 ,400 ,1700 ,2600 ,3200 ,3580 ,290 ,1870 ,2800 ,3250 ,3540 ,400 ,800 ,2600 ,2800 ,3000 ,350 ,600 ,2700 ,2900 ,3300
gi_fof_tenor_amp ftgen 0, 0, 32, -2 ,0 ,-6 ,-7 ,-8 ,-22 ,0 ,-14 ,-12 ,-14 ,-20 ,0 ,-15 ,-18 ,-20 ,-30 ,0 ,-10 ,-12 ,-12 ,-26 ,0 ,-20 ,-17 ,-14 ,-26
gi_fof_tenor_bw ftgen 0, 0, 32, -2 ,80 ,90 ,120 ,130 ,140 ,70 ,80 ,100 ,120 ,120 ,40 ,90 ,100 ,120 ,120 ,70 ,80 ,100 ,130 ,135 ,40 ,60 ,100 ,120 ,120

gi_fof_bass_freq ftgen 0, 0, 32, -2 ,600 ,1040 ,2250 ,2450 ,2750 ,400 ,1620 ,2400 ,2800 ,3100 ,250 ,1750 ,2600 ,3050 ,3340 ,400 ,750 ,2400 ,2600 ,2900 ,350 ,600 ,2400 ,2675 ,2950
gi_fof_bass_amp ftgen 0, 0, 32, -2 ,0 ,-7 ,-9 ,-9 ,-20 ,0 ,-12 ,-9 ,-12 ,-18 ,0 ,-30 ,-16 ,-22 ,-28 ,0 ,-11 ,-21 ,-20 ,-40 ,0 ,-20 ,-32 ,-28 ,-36
gi_fof_bass_bw ftgen 0, 0, 32, -2 ,60 ,70 ,110 ,120 ,130 ,40 ,80 ,100 ,120 ,120 ,60 ,90 ,100 ,120 ,120 ,40 ,80 ,100 ,120 ,120 ,40 ,80 ,100 ,120 ,120



	opcode yiEnvelope,k,ioooooo

ienvType, iattack, idecay, isus, irel, iOldAmp, iNewAmp	xin

itie	tival
idur = p3

iEndAmp = iNewAmp / iOldAmp


if (ienvType == 0) then
	kenv	adsr	iattack, idecay, isus, irel
elseif (ienvType == 1) then	
	kenv 	linseg	0, p3 * .5, 1, p3 * .5, 0
	kenv logcurve kenv, 1.5
elseif (ienvType == 2) then	
	kenv	linseg 	0, p3 - .1, 1, .1, 0	

elseif (ienvType == 3) then

    if (itie == 0 && p3 < 0) then
        ; this is an initial note within a group of tied notes
        kenv	linseg	0, .2, 1,  .2, 1
       
    elseif (p3 > 0 && itie == 1) then
        ; this is an end note out of a group of tied notes
        kenv linseg	1, p3 - 1, 1, 1, 0
 
    elseif (p3 > 0 && itie == 0) then
        ; this is a stand alone note
        kenv adsr iattack, idecay, isus, irel
    else
        ; this is a middle note within a group of tied notes (p3 < 0 && itie == 1)
        kenv line 1, abs(p3), iEndAmp
    endif  

endif

	xout 	kenv


	endop
	opcode blueEffect0,aa,aa

ain1,ain2	xin
isin		ftgentmp	0, 0, 65537, 10, 1

ilevl		=		0.3		; Output level
idelay		=		0.01		; Delay in ms
idpth		=		0.002		; Depth in ms
imax		=		0.25		; Maximum LFO rate
imin		=		0.5		; Minimum LFO rate
iwave		=		isin		; LFO waveform

iwet		=		0.5

ain             =               ain1 + ain2 * .5

ain             =               ain * ilevl
i01             =               rnd(imax)
i02             =               rnd(imax)
i03             =               rnd(imax)
i04             =               rnd(imax)
i05             =               rnd(imax)
i06             =               rnd(imax)
i07             =               rnd(imax)
i08             =               rnd(imax)
i09             =               rnd(imax)
i10             =               rnd(imax)
i11             =               rnd(imax)
i12             =               rnd(imax)
alfo01          oscil           idpth, i01 + imin, iwave
alfo02          oscil           idpth, i02 + imin, iwave, .08
alfo03          oscil           idpth, i03 + imin, iwave, .17
alfo04          oscil           idpth, i04 + imin, iwave, .25
alfo05          oscil           idpth, i05 + imin, iwave, .33
alfo06          oscil           idpth, i06 + imin, iwave, .42
alfo07          oscil           idpth, i07 + imin, iwave, .50
alfo08          oscil           idpth, i08 + imin, iwave, .58
alfo09          oscil           idpth, i09 + imin, iwave, .67
alfo10          oscil           idpth, i10 + imin, iwave, .75
alfo11          oscil           idpth, i11 + imin, iwave, .83
alfo12          oscil           idpth, i12 + imin, iwave, .92
atemp           delayr          idelay + idpth +.1
a01             deltapi         idelay + alfo01
a02             deltapi         idelay + alfo02
a03             deltapi         idelay + alfo03
a04             deltapi         idelay + alfo04
a05             deltapi         idelay + alfo05
a06             deltapi         idelay + alfo06
a07             deltapi         idelay + alfo07
a08             deltapi         idelay + alfo08
a09             deltapi         idelay + alfo09
a10             deltapi         idelay + alfo10
a11             deltapi         idelay + alfo11
a12             deltapi         idelay + alfo12
                delayw          ain
achorusl        sum		a01, a02, a03, a04, a05, a06
achorusr        sum             a07, a08, a09, a10, a11, a12

aout1		=		ain1 * (1-iwet) + achorusl * iwet
aout2		=		ain2 * (1-iwet) + achorusr * iwet

xout	aout1,aout2


	endop
	opcode blueEffect1,aa,aa

ain1,ain2	xin
aout1, aout2  reverbsc ain1, ain2, 0.85, 8000.0

aout1 = (ain1 * 0.3) + (aout1 * (1 - 0.3))
aout2 = (ain2 * 0.3) + (aout2 * (1 - 0.3))


xout	aout1,aout2


	endop


	instr 1	;fof_soprano
ipch 	= p4
ipch2	= p5
ipch 	= (ipch < 15 ? cpspch(ipch) : ipch)
ipch2 	= (ipch2 < 15 ? cpspch(ipch2) : ipch2)
kpchline 	line ipch, p3, ipch2
iamp 	= ampdb(p6)
iSpace	= p7
ienvType	= p8
iStartVowel = p9
iEndVowel = p10
kenv	yiEnvelope ienvType
iIndex1	= iStartVowel * 5
iIndex2	= iEndVowel * 5
;INSERT SOUND GENERATION CODE HERE
/* START SETTINGS */
iamp1	table	iIndex1, gi_fof_soprano_amp
iamp2	table	iIndex1 + 1, gi_fof_soprano_amp
iamp3	table	iIndex1 + 2, gi_fof_soprano_amp
iamp4	table	iIndex1 + 3, gi_fof_soprano_amp
iamp5	table	iIndex1 + 4, gi_fof_soprano_amp
iamp1	= ampdbfs(iamp1)
iamp2	= ampdbfs(iamp2)
iamp3	= ampdbfs(iamp3)
iamp4	= ampdbfs(iamp4)
iamp5	= ampdbfs(iamp5)
iform1	table	iIndex1, gi_fof_soprano_freq
iform2	table	iIndex1 + 1, gi_fof_soprano_freq
iform3	table	iIndex1 + 2, gi_fof_soprano_freq
iform4	table	iIndex1 + 3, gi_fof_soprano_freq
iform5	table	iIndex1 + 4, gi_fof_soprano_freq
iband1	table	iIndex1, gi_fof_soprano_bw
iband2	table	iIndex1 + 1, gi_fof_soprano_bw
iband3	table	iIndex1 + 2, gi_fof_soprano_bw
iband4	table	iIndex1 + 3, gi_fof_soprano_bw
iband5	table	iIndex1 + 4, gi_fof_soprano_bw
/* END SETTINGS */
iamp1end	table	iIndex2, gi_fof_soprano_amp
iamp2end	table	iIndex2 + 1, gi_fof_soprano_amp
iamp3end	table	iIndex2 + 2, gi_fof_soprano_amp
iamp4end	table	iIndex2 + 3, gi_fof_soprano_amp
iamp5end	table	iIndex2 + 4, gi_fof_soprano_amp
iamp1end	= ampdbfs(iamp1end)
iamp2end	= ampdbfs(iamp2end)
iamp3end	= ampdbfs(iamp3end)
iamp4end	= ampdbfs(iamp4end)
iamp5end	= ampdbfs(iamp5end)
iform1end	table	iIndex2, gi_fof_soprano_freq
iform2end	table	iIndex2 + 1, gi_fof_soprano_freq
iform3end	table	iIndex2 + 2, gi_fof_soprano_freq
iform4end	table	iIndex2 + 3, gi_fof_soprano_freq
iform5end	table	iIndex2 + 4, gi_fof_soprano_freq
iband1end	table	iIndex2, gi_fof_soprano_bw
iband2end	table	iIndex2 + 1, gi_fof_soprano_bw
iband3end	table	iIndex2 + 2, gi_fof_soprano_bw
iband4end	table	iIndex2 + 3, gi_fof_soprano_bw
iband5end	table	iIndex2 + 4, gi_fof_soprano_bw
/* LINE */
kamp1	line	iamp1, p3, iamp1end
kamp2	line	iamp2, p3, iamp2end
kamp3	line	iamp3, p3, iamp3end
kamp4	line	iamp4, p3, iamp4end
kamp5	line	iamp5, p3, iamp5end
kform1	line	iform1, p3, iform1end
kform2	line	iform2, p3, iform2end
kform3	line	iform3, p3, iform3end
kform4	line	iform4, p3, iform4end
kform5	line	iform5, p3, iform5end
kband1	line	iband1, p3, iband1end
kband2	line	iband2, p3, iband2end
kband3	line	iband3, p3, iband3end
kband4	line	iband4, p3, iband4end
kband5	line	iband5, p3, iband5end
/* VOICE GENERATION */
ioct	=	0
iris	=	.003
idur	=	.01	
idec	=	.007
iolaps	=	20
ifna	=	gi_sine
ifnb	=	gi_fof
itotdur	=	p3
asig1	fof    	kamp1, kpchline, kform1, ioct, kband1, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig2	fof    	kamp2, kpchline, kform2, ioct, kband2, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig3	fof    	kamp3, kpchline, kform3, ioct, kband3, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig4	fof    	kamp4, kpchline, kform4, ioct, kband4, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig5	fof    	kamp5, kpchline, kform5, ioct, kband5, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
aout	sum 	asig1, asig2, asig3, asig4, asig5
iampMod	= iamp / 0dbfs * .5
aout	= aout * kenv * iampMod
;END SOUND GENERATION CODE
iSpace	= iSpace * 3.14159265359 * .5
krtl     	= sqrt(2) / 2 * (cos(iSpace) + sin(iSpace)) ; CONSTANT POWER PANNING
krtr     	= sqrt(2) / 2 * (cos(iSpace) - sin(iSpace)) ; FROM C.ROADS "CM TUTORIAL" pp460
aLeft 	=	aout * krtl
aRight	=	aout * krtr
ga_bluemix_1_0 = ga_bluemix_1_0 +  aLeft
ga_bluemix_1_1 = ga_bluemix_1_1 +  aRight

	endin

	instr 2	;fof_countertenor
ipch 	= p4
ipch2	= p5
ipch 	= (ipch < 15 ? cpspch(ipch) : ipch)
ipch2 	= (ipch2 < 15 ? cpspch(ipch2) : ipch2)
kpchline 	line ipch, p3, ipch2
iamp 	= ampdb(p6)
iSpace	= p7
ienvType	= p8
iStartVowel = p9
iEndVowel = p10
kenv	yiEnvelope ienvType
iIndex1	= iStartVowel * 5
iIndex2	= iEndVowel * 5
;INSERT SOUND GENERATION CODE HERE
/* START SETTINGS */
iamp1	table	iIndex1, gi_fof_countertenor_amp
iamp2	table	iIndex1 + 1, gi_fof_countertenor_amp
iamp3	table	iIndex1 + 2, gi_fof_countertenor_amp
iamp4	table	iIndex1 + 3, gi_fof_countertenor_amp
iamp5	table	iIndex1 + 4, gi_fof_countertenor_amp
iamp1	= ampdbfs(iamp1)
iamp2	= ampdbfs(iamp2)
iamp3	= ampdbfs(iamp3)
iamp4	= ampdbfs(iamp4)
iamp5	= ampdbfs(iamp5)
iform1	table	iIndex1, gi_fof_countertenor_freq
iform2	table	iIndex1 + 1, gi_fof_countertenor_freq
iform3	table	iIndex1 + 2, gi_fof_countertenor_freq
iform4	table	iIndex1 + 3, gi_fof_countertenor_freq
iform5	table	iIndex1 + 4, gi_fof_countertenor_freq
iband1	table	iIndex1, gi_fof_countertenor_bw
iband2	table	iIndex1 + 1, gi_fof_countertenor_bw
iband3	table	iIndex1 + 2, gi_fof_countertenor_bw
iband4	table	iIndex1 + 3, gi_fof_countertenor_bw
iband5	table	iIndex1 + 4, gi_fof_countertenor_bw
/* END SETTINGS */
iamp1end	table	iIndex2, gi_fof_countertenor_amp
iamp2end	table	iIndex2 + 1, gi_fof_countertenor_amp
iamp3end	table	iIndex2 + 2, gi_fof_countertenor_amp
iamp4end	table	iIndex2 + 3, gi_fof_countertenor_amp
iamp5end	table	iIndex2 + 4, gi_fof_countertenor_amp
iamp1end	= ampdbfs(iamp1end)
iamp2end	= ampdbfs(iamp2end)
iamp3end	= ampdbfs(iamp3end)
iamp4end	= ampdbfs(iamp4end)
iamp5end	= ampdbfs(iamp5end)
iform1end	table	iIndex2, gi_fof_countertenor_freq
iform2end	table	iIndex2 + 1, gi_fof_countertenor_freq
iform3end	table	iIndex2 + 2, gi_fof_countertenor_freq
iform4end	table	iIndex2 + 3, gi_fof_countertenor_freq
iform5end	table	iIndex2 + 4, gi_fof_countertenor_freq
iband1end	table	iIndex2, gi_fof_countertenor_bw
iband2end	table	iIndex2 + 1, gi_fof_countertenor_bw
iband3end	table	iIndex2 + 2, gi_fof_countertenor_bw
iband4end	table	iIndex2 + 3, gi_fof_countertenor_bw
iband5end	table	iIndex2 + 4, gi_fof_countertenor_bw
/* LINE */
kamp1	line	iamp1, p3, iamp1end
kamp2	line	iamp2, p3, iamp2end
kamp3	line	iamp3, p3, iamp3end
kamp4	line	iamp4, p3, iamp4end
kamp5	line	iamp5, p3, iamp5end
kform1	line	iform1, p3, iform1end
kform2	line	iform2, p3, iform2end
kform3	line	iform3, p3, iform3end
kform4	line	iform4, p3, iform4end
kform5	line	iform5, p3, iform5end
kband1	line	iband1, p3, iband1end
kband2	line	iband2, p3, iband2end
kband3	line	iband3, p3, iband3end
kband4	line	iband4, p3, iband4end
kband5	line	iband5, p3, iband5end
/* VOICE GENERATION */
ioct	=	0
iris	=	.003
idur	=	.01	
idec	=	.007
iolaps	=	20
ifna	=	gi_sine
ifnb	=	gi_fof
itotdur	=	p3
asig1	fof    	kamp1, kpchline, kform1, ioct, kband1, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig2	fof    	kamp2, kpchline, kform2, ioct, kband2, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig3	fof    	kamp3, kpchline, kform3, ioct, kband3, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig4	fof    	kamp4, kpchline, kform4, ioct, kband4, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig5	fof    	kamp5, kpchline, kform5, ioct, kband5, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
aout	sum 	asig1, asig2, asig3, asig4, asig5
iampMod	= iamp / 0dbfs * .5
aout	= aout * kenv * iampMod
;END SOUND GENERATION CODE
iSpace	= iSpace * 3.14159265359 * .5
krtl     	= sqrt(2) / 2 * (cos(iSpace) + sin(iSpace)) ; CONSTANT POWER PANNING
krtr     	= sqrt(2) / 2 * (cos(iSpace) - sin(iSpace)) ; FROM C.ROADS "CM TUTORIAL" pp460
aLeft 	=	aout * krtl
aRight	=	aout * krtr
ga_bluemix_2_0 = ga_bluemix_2_0 +  aLeft
ga_bluemix_2_1 = ga_bluemix_2_1 +  aRight

	endin

	instr 3	;fof_alto
ipch 	= p4
ipch2	= p5
ipch 	= (ipch < 15 ? cpspch(ipch) : ipch)
ipch2 	= (ipch2 < 15 ? cpspch(ipch2) : ipch2)
kpchline 	line ipch, p3, ipch2
iamp 	= ampdb(p6)
iSpace	= p7
ienvType	= p8
iStartVowel = p9
iEndVowel = p10
kenv	yiEnvelope ienvType
iIndex1	= iStartVowel * 5
iIndex2	= iEndVowel * 5
;INSERT SOUND GENERATION CODE HERE
/* START SETTINGS */
iamp1	table	iIndex1, gi_fof_alto_amp
iamp2	table	iIndex1 + 1, gi_fof_alto_amp
iamp3	table	iIndex1 + 2, gi_fof_alto_amp
iamp4	table	iIndex1 + 3, gi_fof_alto_amp
iamp5	table	iIndex1 + 4, gi_fof_alto_amp
iamp1	= ampdbfs(iamp1)
iamp2	= ampdbfs(iamp2)
iamp3	= ampdbfs(iamp3)
iamp4	= ampdbfs(iamp4)
iamp5	= ampdbfs(iamp5)
iform1	table	iIndex1, gi_fof_alto_freq
iform2	table	iIndex1 + 1, gi_fof_alto_freq
iform3	table	iIndex1 + 2, gi_fof_alto_freq
iform4	table	iIndex1 + 3, gi_fof_alto_freq
iform5	table	iIndex1 + 4, gi_fof_alto_freq
iband1	table	iIndex1, gi_fof_alto_bw
iband2	table	iIndex1 + 1, gi_fof_alto_bw
iband3	table	iIndex1 + 2, gi_fof_alto_bw
iband4	table	iIndex1 + 3, gi_fof_alto_bw
iband5	table	iIndex1 + 4, gi_fof_alto_bw
/* END SETTINGS */
iamp1end	table	iIndex2, gi_fof_alto_amp
iamp2end	table	iIndex2 + 1, gi_fof_alto_amp
iamp3end	table	iIndex2 + 2, gi_fof_alto_amp
iamp4end	table	iIndex2 + 3, gi_fof_alto_amp
iamp5end	table	iIndex2 + 4, gi_fof_alto_amp
iamp1end	= ampdbfs(iamp1end)
iamp2end	= ampdbfs(iamp2end)
iamp3end	= ampdbfs(iamp3end)
iamp4end	= ampdbfs(iamp4end)
iamp5end	= ampdbfs(iamp5end)
iform1end	table	iIndex2, gi_fof_alto_freq
iform2end	table	iIndex2 + 1, gi_fof_alto_freq
iform3end	table	iIndex2 + 2, gi_fof_alto_freq
iform4end	table	iIndex2 + 3, gi_fof_alto_freq
iform5end	table	iIndex2 + 4, gi_fof_alto_freq
iband1end	table	iIndex2, gi_fof_alto_bw
iband2end	table	iIndex2 + 1, gi_fof_alto_bw
iband3end	table	iIndex2 + 2, gi_fof_alto_bw
iband4end	table	iIndex2 + 3, gi_fof_alto_bw
iband5end	table	iIndex2 + 4, gi_fof_alto_bw
/* LINE */
kamp1	line	iamp1, p3, iamp1end
kamp2	line	iamp2, p3, iamp2end
kamp3	line	iamp3, p3, iamp3end
kamp4	line	iamp4, p3, iamp4end
kamp5	line	iamp5, p3, iamp5end
kform1	line	iform1, p3, iform1end
kform2	line	iform2, p3, iform2end
kform3	line	iform3, p3, iform3end
kform4	line	iform4, p3, iform4end
kform5	line	iform5, p3, iform5end
kband1	line	iband1, p3, iband1end
kband2	line	iband2, p3, iband2end
kband3	line	iband3, p3, iband3end
kband4	line	iband4, p3, iband4end
kband5	line	iband5, p3, iband5end
/* VOICE GENERATION */
ioct	=	0
iris	=	.003
idur	=	.01	
idec	=	.007
iolaps	=	20
ifna	=	gi_sine
ifnb	=	gi_fof
itotdur	=	p3
asig1	fof    	kamp1, kpchline, kform1, ioct, kband1, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig2	fof    	kamp2, kpchline, kform2, ioct, kband2, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig3	fof    	kamp3, kpchline, kform3, ioct, kband3, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig4	fof    	kamp4, kpchline, kform4, ioct, kband4, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig5	fof    	kamp5, kpchline, kform5, ioct, kband5, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
aout	sum 	asig1, asig2, asig3, asig4, asig5
iampMod	= iamp / 0dbfs * .5
aout	= aout * kenv * iampMod
;END SOUND GENERATION CODE
iSpace	= iSpace * 3.14159265359 * .5
krtl     	= sqrt(2) / 2 * (cos(iSpace) + sin(iSpace)) ; CONSTANT POWER PANNING
krtr     	= sqrt(2) / 2 * (cos(iSpace) - sin(iSpace)) ; FROM C.ROADS "CM TUTORIAL" pp460
aLeft 	=	aout * krtl
aRight	=	aout * krtr
ga_bluemix_3_0 = ga_bluemix_3_0 +  aLeft
ga_bluemix_3_1 = ga_bluemix_3_1 +  aRight

	endin

	instr 4	;fof_tenor
ipch 	= p4
ipch2	= p5
ipch 	= (ipch < 15 ? cpspch(ipch) : ipch)
ipch2 	= (ipch2 < 15 ? cpspch(ipch2) : ipch2)
kpchline 	line ipch, p3, ipch2
iamp 	= ampdb(p6)
iSpace	= p7
ienvType	= p8
iStartVowel = p9
iEndVowel = p10
kenv	yiEnvelope ienvType
iIndex1	= iStartVowel * 5
iIndex2	= iEndVowel * 5
;INSERT SOUND GENERATION CODE HERE
/* START SETTINGS */
iamp1	table	iIndex1, gi_fof_tenor_amp
iamp2	table	iIndex1 + 1, gi_fof_tenor_amp
iamp3	table	iIndex1 + 2, gi_fof_tenor_amp
iamp4	table	iIndex1 + 3, gi_fof_tenor_amp
iamp5	table	iIndex1 + 4, gi_fof_tenor_amp
iamp1	= ampdbfs(iamp1)
iamp2	= ampdbfs(iamp2)
iamp3	= ampdbfs(iamp3)
iamp4	= ampdbfs(iamp4)
iamp5	= ampdbfs(iamp5)
iform1	table	iIndex1, gi_fof_tenor_freq
iform2	table	iIndex1 + 1, gi_fof_tenor_freq
iform3	table	iIndex1 + 2, gi_fof_tenor_freq
iform4	table	iIndex1 + 3, gi_fof_tenor_freq
iform5	table	iIndex1 + 4, gi_fof_tenor_freq
iband1	table	iIndex1, gi_fof_tenor_bw
iband2	table	iIndex1 + 1, gi_fof_tenor_bw
iband3	table	iIndex1 + 2, gi_fof_tenor_bw
iband4	table	iIndex1 + 3, gi_fof_tenor_bw
iband5	table	iIndex1 + 4, gi_fof_tenor_bw
/* END SETTINGS */
iamp1end	table	iIndex2, gi_fof_tenor_amp
iamp2end	table	iIndex2 + 1, gi_fof_tenor_amp
iamp3end	table	iIndex2 + 2, gi_fof_tenor_amp
iamp4end	table	iIndex2 + 3, gi_fof_tenor_amp
iamp5end	table	iIndex2 + 4, gi_fof_tenor_amp
iamp1end	= ampdbfs(iamp1end)
iamp2end	= ampdbfs(iamp2end)
iamp3end	= ampdbfs(iamp3end)
iamp4end	= ampdbfs(iamp4end)
iamp5end	= ampdbfs(iamp5end)
iform1end	table	iIndex2, gi_fof_tenor_freq
iform2end	table	iIndex2 + 1, gi_fof_tenor_freq
iform3end	table	iIndex2 + 2, gi_fof_tenor_freq
iform4end	table	iIndex2 + 3, gi_fof_tenor_freq
iform5end	table	iIndex2 + 4, gi_fof_tenor_freq
iband1end	table	iIndex2, gi_fof_tenor_bw
iband2end	table	iIndex2 + 1, gi_fof_tenor_bw
iband3end	table	iIndex2 + 2, gi_fof_tenor_bw
iband4end	table	iIndex2 + 3, gi_fof_tenor_bw
iband5end	table	iIndex2 + 4, gi_fof_tenor_bw
/* LINE */
kamp1	line	iamp1, p3, iamp1end
kamp2	line	iamp2, p3, iamp2end
kamp3	line	iamp3, p3, iamp3end
kamp4	line	iamp4, p3, iamp4end
kamp5	line	iamp5, p3, iamp5end
kform1	line	iform1, p3, iform1end
kform2	line	iform2, p3, iform2end
kform3	line	iform3, p3, iform3end
kform4	line	iform4, p3, iform4end
kform5	line	iform5, p3, iform5end
kband1	line	iband1, p3, iband1end
kband2	line	iband2, p3, iband2end
kband3	line	iband3, p3, iband3end
kband4	line	iband4, p3, iband4end
kband5	line	iband5, p3, iband5end
/* VOICE GENERATION */
ioct	=	0
iris	=	.003
idur	=	.01	
idec	=	.007
iolaps	=	20
ifna	=	gi_sine
ifnb	=	gi_fof
itotdur	=	p3
asig1	fof    	kamp1, kpchline, kform1, ioct, kband1, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig2	fof    	kamp2, kpchline, kform2, ioct, kband2, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig3	fof    	kamp3, kpchline, kform3, ioct, kband3, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig4	fof    	kamp4, kpchline, kform4, ioct, kband4, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig5	fof    	kamp5, kpchline, kform5, ioct, kband5, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
aout	sum 	asig1, asig2, asig3, asig4, asig5
iampMod	= iamp / 0dbfs * .5
aout	= aout * kenv * iampMod
;END SOUND GENERATION CODE
iSpace	= iSpace * 3.14159265359 * .5
krtl     	= sqrt(2) / 2 * (cos(iSpace) + sin(iSpace)) ; CONSTANT POWER PANNING
krtr     	= sqrt(2) / 2 * (cos(iSpace) - sin(iSpace)) ; FROM C.ROADS "CM TUTORIAL" pp460
aLeft 	=	aout * krtl
aRight	=	aout * krtr
ga_bluemix_4_0 = ga_bluemix_4_0 +  aLeft
ga_bluemix_4_1 = ga_bluemix_4_1 +  aRight

	endin

	instr 5	;fof_bass
ipch 	= p4
ipch2	= p5
ipch 	= (ipch < 15 ? cpspch(ipch) : ipch)
ipch2 	= (ipch2 < 15 ? cpspch(ipch2) : ipch2)
kpchline 	line ipch, p3, ipch2
iamp 	= ampdb(p6)
iSpace	= p7
ienvType	= p8
iStartVowel = p9
iEndVowel = p10
kenv	yiEnvelope ienvType
iIndex1	= iStartVowel * 5
iIndex2	= iEndVowel * 5
;INSERT SOUND GENERATION CODE HERE
/* START SETTINGS */
iamp1	table	iIndex1, gi_fof_bass_amp
iamp2	table	iIndex1 + 1, gi_fof_bass_amp
iamp3	table	iIndex1 + 2, gi_fof_bass_amp
iamp4	table	iIndex1 + 3, gi_fof_bass_amp
iamp5	table	iIndex1 + 4, gi_fof_bass_amp
iamp1	= ampdbfs(iamp1)
iamp2	= ampdbfs(iamp2)
iamp3	= ampdbfs(iamp3)
iamp4	= ampdbfs(iamp4)
iamp5	= ampdbfs(iamp5)
iform1	table	iIndex1, gi_fof_bass_freq
iform2	table	iIndex1 + 1, gi_fof_bass_freq
iform3	table	iIndex1 + 2, gi_fof_bass_freq
iform4	table	iIndex1 + 3, gi_fof_bass_freq
iform5	table	iIndex1 + 4, gi_fof_bass_freq
iband1	table	iIndex1, gi_fof_bass_bw
iband2	table	iIndex1 + 1, gi_fof_bass_bw
iband3	table	iIndex1 + 2, gi_fof_bass_bw
iband4	table	iIndex1 + 3, gi_fof_bass_bw
iband5	table	iIndex1 + 4, gi_fof_bass_bw
/* END SETTINGS */
iamp1end	table	iIndex2, gi_fof_bass_amp
iamp2end	table	iIndex2 + 1, gi_fof_bass_amp
iamp3end	table	iIndex2 + 2, gi_fof_bass_amp
iamp4end	table	iIndex2 + 3, gi_fof_bass_amp
iamp5end	table	iIndex2 + 4, gi_fof_bass_amp
iamp1end	= ampdbfs(iamp1end)
iamp2end	= ampdbfs(iamp2end)
iamp3end	= ampdbfs(iamp3end)
iamp4end	= ampdbfs(iamp4end)
iamp5end	= ampdbfs(iamp5end)
iform1end	table	iIndex2, gi_fof_bass_freq
iform2end	table	iIndex2 + 1, gi_fof_bass_freq
iform3end	table	iIndex2 + 2, gi_fof_bass_freq
iform4end	table	iIndex2 + 3, gi_fof_bass_freq
iform5end	table	iIndex2 + 4, gi_fof_bass_freq
iband1end	table	iIndex2, gi_fof_bass_bw
iband2end	table	iIndex2 + 1, gi_fof_bass_bw
iband3end	table	iIndex2 + 2, gi_fof_bass_bw
iband4end	table	iIndex2 + 3, gi_fof_bass_bw
iband5end	table	iIndex2 + 4, gi_fof_bass_bw
/* LINE */
kamp1	line	iamp1, p3, iamp1end
kamp2	line	iamp2, p3, iamp2end
kamp3	line	iamp3, p3, iamp3end
kamp4	line	iamp4, p3, iamp4end
kamp5	line	iamp5, p3, iamp5end
kform1	line	iform1, p3, iform1end
kform2	line	iform2, p3, iform2end
kform3	line	iform3, p3, iform3end
kform4	line	iform4, p3, iform4end
kform5	line	iform5, p3, iform5end
kband1	line	iband1, p3, iband1end
kband2	line	iband2, p3, iband2end
kband3	line	iband3, p3, iband3end
kband4	line	iband4, p3, iband4end
kband5	line	iband5, p3, iband5end
/* VOICE GENERATION */
ioct	=	0
iris	=	.003
idur	=	.01	
idec	=	.007
iolaps	=	20
ifna	=	gi_sine
ifnb	=	gi_fof
itotdur	=	p3
asig1	fof    	kamp1, kpchline, kform1, ioct, kband1, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig2	fof    	kamp2, kpchline, kform2, ioct, kband2, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig3	fof    	kamp3, kpchline, kform3, ioct, kband3, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig4	fof    	kamp4, kpchline, kform4, ioct, kband4, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
asig5	fof    	kamp5, kpchline, kform5, ioct, kband5, iris, idur, idec, iolaps, ifna, ifnb, itotdur 
aout	sum 	asig1, asig2, asig3, asig4, asig5
iampMod	= iamp / 0dbfs * .5
aout	= aout * kenv * iampMod
;END SOUND GENERATION CODE
iSpace	= iSpace * 3.14159265359 * .5
krtl     	= sqrt(2) / 2 * (cos(iSpace) + sin(iSpace)) ; CONSTANT POWER PANNING
krtr     	= sqrt(2) / 2 * (cos(iSpace) - sin(iSpace)) ; FROM C.ROADS "CM TUTORIAL" pp460
aLeft 	=	aout * krtl
aRight	=	aout * krtr
ga_bluemix_5_0 = ga_bluemix_5_0 +  aLeft
ga_bluemix_5_1 = ga_bluemix_5_1 +  aRight

	endin

	instr 6	;Blue Mixer Instrument
ga_bluesub_Master_0	sum	ga_bluesub_Master_0, ga_bluemix_1_0
ga_bluesub_Master_1	sum	ga_bluesub_Master_1, ga_bluemix_1_1
ga_bluesub_Master_0	sum	ga_bluesub_Master_0, ga_bluemix_2_0
ga_bluesub_Master_1	sum	ga_bluesub_Master_1, ga_bluemix_2_1
ga_bluesub_Master_0	sum	ga_bluesub_Master_0, ga_bluemix_3_0
ga_bluesub_Master_1	sum	ga_bluesub_Master_1, ga_bluemix_3_1
ga_bluesub_Master_0	sum	ga_bluesub_Master_0, ga_bluemix_4_0
ga_bluesub_Master_1	sum	ga_bluesub_Master_1, ga_bluemix_4_1
ga_bluesub_Master_0	sum	ga_bluesub_Master_0, ga_bluemix_5_0
ga_bluesub_Master_1	sum	ga_bluesub_Master_1, ga_bluemix_5_1
ga_bluesub_Master_0, ga_bluesub_Master_1	blueEffect0	ga_bluesub_Master_0, ga_bluesub_Master_1
ga_bluesub_Master_0, ga_bluesub_Master_1	blueEffect1	ga_bluesub_Master_0, ga_bluesub_Master_1
outc ga_bluesub_Master_0, ga_bluesub_Master_1
ga_bluemix_1_0 = 0
ga_bluemix_1_1 = 0
ga_bluemix_2_0 = 0
ga_bluemix_2_1 = 0
ga_bluemix_3_0 = 0
ga_bluemix_3_1 = 0
ga_bluemix_4_0 = 0
ga_bluemix_4_1 = 0
ga_bluemix_5_0 = 0
ga_bluemix_5_1 = 0
ga_bluesub_Master_0 = 0
ga_bluesub_Master_1 = 0

	endin


</CsInstruments>

<CsScore>













i1	0.0	2	9.04	9.04	80	0	1	4	4
i1	11.125	2	9.03	9.03	80	0	1	4	4
i1	23.078125	2	9.04	9.04	80	0	1	4	4
i2	0.0	2	8.07	8.07	80	0	1	1	1
i2	3.015625	2	8.07	10.07	80	0	1	2	1
i2	11.125	2	8.07	8.07	80	0	1	1	1
i2	15.078125	4.03125	8.07	10.07	80	0	1	2	1
i2	23.078125	2	8.07	8.07	80	0	1	1	1
i3	0.0	2	8.04	8.04	80	0	1	4	4
i3	3.53125	6.265625	8.03	8.04	80	0	1	4	4
i3	11.125	2	8.03	8.03	80	0	1	4	4
i3	15.03125	6.265625	8.03	8.04	80	0	1	4	4
i3	23.078125	2	8.04	8.04	80	0	1	4	4
i4	0.0	2	7.07	7.07	80	0	1	4	4
i4	3.671875	4.359375	8.07	8.05	80	0	1	2	4
i4	11.125	2	7.07	7.07	80	0	1	4	4
i4	15.171875	4.359375	8.07	8.05	80	0	1	2	4
i4	23.078125	2	7.07	7.07	80	0	1	4	4
i5	0.0	2	7.00	7.00	80	0	1	4	4
i5	3.703125	4.75	7.00	7.08	80	0	1	4	4
i5	11.125	2	7.00	7.00	80	0	1	4	4
i5	15.765625	4.75	7.00	7.08	80	0	1	4	4
i5	23.078125	2	7.00	7.00	80	0	1	4	4
i5	4.8125	4.359375	7.00	7.03	80	0	1	4	4
i5	16.390625	4.359375	7.00	7.03	80	0	1	4	4
i6	0	30.078125	
e

</CsScore>

</CsoundSynthesizer>